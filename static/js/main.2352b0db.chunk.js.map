{"version":3,"sources":["constants/routePaths.ts","utils/routeTransitionUtils.ts","enums/LoadingStatus.ts","enums/PollingStatus.ts","components/ErrorPage.tsx","models/Article.ts","models/LandingPage.ts","models/Product.ts","repositories/contentItemRepository.ts","context/AppContext.tsx","components/NavigationBar.tsx","components/PageContent.tsx","components/Product/ProductDetailsPage.tsx","constants/resources.ts","components/Product/ProductCard.tsx","components/Product/ProductsPage.tsx","components/WelcomePage.tsx","components/ProgressBar.tsx","App.tsx","authentication/authOptions.ts","authentication/WebAuth.ts","constants/localStorageKeys.ts","components/Loading.tsx","context/AuthContext.tsx","utils/ajax.ts","utils/restProvider.ts","repositories/previewApiKeyRepository.ts","factories/createLoadPreviewApiKey.ts","utils/projectIdUtil.ts","context/AppContextInitialization.tsx","factories/createLoadApplicationData.ts","index.tsx"],"names":["DeployedProjectRootRoute","process","CallbackRoute","ProjectRoute","ProductsRoute","ProductDetailsRoute","buildPath","route","params","compile","LoadingStatus","PollingStatus","ErrorPageType","ArticleExampleContentType","body","title","url","ContentItem","LandingPageExampleContentType","propertyResolver","elementName","productList","ProductExampleContentType","description","name","image","taxonomyCategorizingTargetAudience","deliveryClient","ensureDeliveryClient","projectId","previewApiKey","DeliveryClient","proxy","basePreviewUrl","typeResolvers","TypeResolver","globalQueryConfig","usePreviewMode","getAllArticles","Error","items","type","toPromise","then","response","catch","reason","console","log","Array","getProductsPage","defaultAppContext","dataLoadingStatus","NotLoaded","dataPollingStatus","Stopped","previewApiKeyLoadingStatus","projectIdLoadingStatus","articles","products","loadWelcomePage","loadProducts","setProjectId","setLoadingStatus","setProjectIdLoadingStatus","setPreviewApiKey","setPreviewApiKeyLoadingStatus","AppContext","React","createContext","AppContextProvider","Provider","AppContextConsumer","Consumer","AppContextComponent","state","_dataPollingInterval","_startDataPolling","callback","clearInterval","setInterval","a","async","setState","Fetching","Waiting","loadingStatus","_loadWelcomePageData","_loadProductsData","productsPage","value","this","contextValue","props","children","PureComponent","NavigationBar","appContext","className","activeClassName","exact","to","PageContent","ProductDetailsPage","init","product","pictureUrl","alt","src","dangerouslySetInnerHTML","__html","resolveHtml","ProductDetailsPageConnected","match","filter","productId","productImagePlaceholderUrl","ProductCardPlaceholder","imageSource","ProductCard","ProductsPage","isSingleProduct","length","classNames","map","key","system","id","ProductsPageConnected","WelcomePage","article","WelcomePageConnected","ProgressBar","context","useContext","useState","visible","setVisible","useEffect","timeoutId","window","setTimeout","clearTimeout","App","path","component","render","authOptions","domain","clientID","audience","redirectUri","responseType","scope","logoutOptions","returnTo","WebAuth","webAuth","auth0","login","authorize","silentLogin","localStorage","setItem","location","pathname","prompt","logout","getRedirectUri","redirectUriFromStorage","getItem","removeItem","startsWith","slice","handleAuthentication","onSuccessLogin","onFailedLogin","parseHash","err","authResult","accessToken","idToken","expiresAt","expiresIn","Date","getTime","isAuthenticated","Loading","defaultAuthContext","isLoggedIn","AuthContextProvider","AuthContextConsumer","AuthContext","isAuthUrlHash","hash","test","handleAuthCallback","history","push","warn","from","Component","AuthContextWithRouter","withRouter","projectIdUrlTemplate","MissingProjectIdErrorPageContent","UnableToGetPreviewApiKeyErrorPageContent","ErrorPage","MissingProjectId","UnableToGetPreviewApiKey","addCustomHeaders","request","customHeaders","Object","keys","forEach","header","setRequestHeader","getNewEmptyRequest","XMLHttpRequest","parseResponse","responseText","JSON","parse","restProvider","ajax","makeRequest","httpVerb","data","requestContext","headers","defaultHeaders","newHeaders","authToken","Authorization","appInstanceId","getHeaders","requestBody","stringify","prepareDataForSend","post","validStatusCodes","indexOf","status","createRestProvider","withCredentials","Promise","resolve","open","onreadystatechange","readyState","send","requestFile","upload","formData","uploadProgressCallback","addEventListener","createAjaxWithCredentials","getPreviewApiKey","createLoadPreviewApiKey","authContext","api_key","getProjectIdFromUrl","routeToMatch","matchPath","AppContextInitialization","loadApplicationData","Failed","Finished","AppContextInitializationWithRouter","deps","loadPreviewApikey","projectIdFromUrl","InProgress","every","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.2352b0db.chunk.js","sourcesContent":["const uuidPattern = '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}';\r\n\r\nexport const DeployedProjectRootRoute = `${process.env.REACT_APP_PROJECT_ROUTE}`;\r\n\r\nexport const RootRoute = '/';\r\nexport const CallbackRoute = `${RootRoute}callback`;\r\n\r\nexport const ProjectRoute = `${RootRoute}:projectId(${uuidPattern})`;\r\nexport const ProductsRoute = `${ProjectRoute}/products`;\r\nexport const ProductDetailsRoute = `${ProductsRoute}/:productId`;\r\n\r\nexport type ProjectRouteParams = {\r\n  readonly projectId: string;\r\n};\r\n\r\nexport type ProductDetailsRouteParams = ProjectRouteParams & {\r\n  readonly productId: string;\r\n}\r\n","import { compile } from \"path-to-regexp\";\r\n\r\ninterface IDictionary<T> {\r\n  readonly [key: string]: T | undefined;\r\n}\r\n\r\nexport function buildPath<TRouteParams = IDictionary<string>>(route: string, params: TRouteParams): string {\r\n  return compile(route)(params as any as object);\r\n}\r\n","export enum LoadingStatus {\r\n  NotLoaded = 'notLoaded',\r\n  InProgress = 'inProgress',\r\n  Finished = 'finished',\r\n  Failed = 'failed',\r\n}\r\n","export enum PollingStatus {\r\n  Stopped = 'Stopped',\r\n  Fetching = 'Fetching',\r\n  Waiting = 'Waiting',\r\n}\r\n","import React from 'react';\r\n\r\nexport enum ErrorPageType {\r\n  MissingProjectId = 'missingProjectId',\r\n  UnableToGetPreviewApiKey = 'unableToGetPreviewApiKey',\r\n}\r\n\r\ninterface IErrorPageProps {\r\n  readonly type: ErrorPageType;\r\n}\r\n\r\nconst projectIdUrlTemplate = \"https://kentico.github.io/kontent-sample-app-preview-react/<your_project_id>\";\r\n\r\nconst MissingProjectIdErrorPageContent: React.FunctionComponent = () => (\r\n  <p>Didn't you forget to provide Project Id in the url? E.g. <i>{projectIdUrlTemplate}</i></p>\r\n);\r\n\r\nconst UnableToGetPreviewApiKeyErrorPageContent: React.FunctionComponent = () => (\r\n  <>\r\n    <p>There was problem retrieving Preview Api Key.</p>\r\n    <p>Did you provide correct Project Id? E.g. <i>{projectIdUrlTemplate}</i></p>\r\n  </>\r\n);\r\n\r\nexport const ErrorPage: React.FunctionComponent<IErrorPageProps> = ({ type }) => (\r\n  <>\r\n    <div className=\"navigation-bar\">\r\n      <nav className=\"navigation-bar__app-menu\"/>\r\n    </div>\r\n\r\n    <p>Ooops, there was some error!</p>\r\n    {type === ErrorPageType.MissingProjectId && (\r\n      <MissingProjectIdErrorPageContent/>\r\n    )}\r\n\r\n    {type === ErrorPageType.UnableToGetPreviewApiKey && (\r\n      <UnableToGetPreviewApiKeyErrorPageContent/>\r\n    )}\r\n  </>\r\n);\r\n\r\n","\r\nimport { ContentItem, Elements } from '@kentico/kontent-delivery';\r\n\r\n/**\r\n * Generated by '@kentico/kontent-model-generator@3.0.0'\r\n * Timestamp: Tue Dec 10 2019 08:55:55 GMT+0100 (GMT+01:00)\r\n *\r\n * Tip: You can replace 'ContentItem' with another generated class to fully leverage strong typing.\r\n */\r\nexport class ArticleExampleContentType extends ContentItem {\r\n    public body!: Elements.RichTextElement;\r\n    public title!: Elements.TextElement;\r\n    public url!: Elements.UrlSlugElement;\r\n}\r\n","\r\nimport { ContentItem, Elements } from '@kentico/kontent-delivery';\r\n\r\n/**\r\n * Generated by '@kentico/kontent-model-generator@3.0.0'\r\n * Timestamp: Tue Dec 10 2019 08:55:55 GMT+0100 (GMT+01:00)\r\n *\r\n * Tip: You can replace 'ContentItem' with another generated class to fully leverage strong typing.\r\n */\r\nexport class LandingPageExampleContentType extends ContentItem {\r\n    public body!: Elements.RichTextElement;\r\n    public productList!: Elements.LinkedItemsElement<ContentItem>;\r\n    public title!: Elements.TextElement;\r\n    public url!: Elements.UrlSlugElement;\r\n    constructor() {\r\n        super({\r\n            propertyResolver: ((elementName: string) => {\r\n                if (elementName === 'product_list') {\r\n                    return 'productList';\r\n                }\r\n                return elementName;\r\n            })\r\n        });\r\n    }\r\n}\r\n","\r\nimport { ContentItem, Elements } from '@kentico/kontent-delivery';\r\n\r\n/**\r\n * Generated by '@kentico/kontent-model-generator@3.0.0'\r\n * Timestamp: Tue Dec 10 2019 08:55:55 GMT+0100 (GMT+01:00)\r\n *\r\n * Tip: You can replace 'ContentItem' with another generated class to fully leverage strong typing.\r\n */\r\nexport class ProductExampleContentType extends ContentItem {\r\n    public url!: Elements.UrlSlugElement;\r\n    public description!: Elements.RichTextElement;\r\n    public name!: Elements.TextElement;\r\n    public image!: Elements.AssetsElement;\r\n    public taxonomyCategorizingTargetAudience!: Elements.TaxonomyElement;\r\n    constructor() {\r\n        super({\r\n            propertyResolver: ((elementName: string) => {\r\n                if (elementName === 'taxonomy___categorizing_target_audience') {\r\n                    return 'taxonomyCategorizingTargetAudience';\r\n                }\r\n                return elementName;\r\n            })\r\n        });\r\n    }\r\n}\r\n","import { ArticleExampleContentType } from \"../models/Article\";\r\nimport { DeliveryClient, IDeliveryClient, TypeResolver } from \"@kentico/kontent-delivery\";\r\nimport { LandingPageExampleContentType } from \"../models/LandingPage\";\r\nimport { ProductExampleContentType } from \"../models/Product\";\r\n\r\nlet deliveryClient: IDeliveryClient | null = null;\r\n\r\nconst ensureDeliveryClient = (projectId: string, previewApiKey: string): void => {\r\n  if (deliveryClient) {\r\n    return;\r\n  }\r\n\r\n  deliveryClient = new DeliveryClient({\r\n    previewApiKey,\r\n    projectId: projectId,\r\n    proxy: {\r\n      basePreviewUrl: process.env.REACT_APP_DELIVER_URL,\r\n    },\r\n    typeResolvers: [\r\n      new TypeResolver('article_example_content_type', () => new ArticleExampleContentType()),\r\n      new TypeResolver('landing_page_example_content_type', () => new LandingPageExampleContentType()),\r\n      new TypeResolver('product_example_content_type', () => new ProductExampleContentType()),\r\n    ],\r\n    globalQueryConfig: {\r\n      usePreviewMode: true,\r\n    }\r\n  });\r\n};\r\n\r\n\r\nexport const getAllArticles = (projectId: string, previewApiKey: string): Promise<Array<ArticleExampleContentType>> => {\r\n  ensureDeliveryClient(projectId, previewApiKey);\r\n  if (!deliveryClient) {\r\n    throw new Error('Delivery client is not initialized yet');\r\n  }\r\n\r\n  return deliveryClient.items<ArticleExampleContentType>()\r\n    .type('article_example_content_type')\r\n    .toPromise()\r\n    .then(response => {\r\n      return response.items;\r\n    })\r\n    .catch(reason => {\r\n      console.log(reason);\r\n      return new Array<ArticleExampleContentType>();\r\n    });\r\n};\r\n\r\nexport const getProductsPage = (projectId: string, previewApiKey: string): Promise<Array<LandingPageExampleContentType>> => {\r\n  ensureDeliveryClient(projectId, previewApiKey);\r\n  if (!deliveryClient) {\r\n    throw new Error('Delivery client is not initialized yet');\r\n  }\r\n\r\n  return deliveryClient.items<LandingPageExampleContentType>()\r\n    .type('landing_page_example_content_type')\r\n    .toPromise()\r\n    .then(response => {\r\n      return response.items;\r\n    })\r\n    .catch(reason => {\r\n      console.log(reason);\r\n      return new Array<LandingPageExampleContentType>();\r\n    });\r\n};\r\n","import React from 'react';\r\nimport { clearInterval, setInterval } from 'timers';\r\nimport { LoadingStatus } from '../enums/LoadingStatus';\r\nimport { PollingStatus } from '../enums/PollingStatus';\r\nimport { ArticleExampleContentType } from '../models/Article';\r\nimport { ProductExampleContentType } from '../models/Product';\r\nimport { getAllArticles, getProductsPage } from '../repositories/contentItemRepository';\r\n\r\ninterface IAppContextState {\r\n  readonly dataLoadingStatus: LoadingStatus;\r\n  readonly dataPollingStatus: PollingStatus;\r\n  readonly previewApiKey: string;\r\n  readonly previewApiKeyLoadingStatus: LoadingStatus;\r\n  readonly projectId: string;\r\n  readonly projectIdLoadingStatus: LoadingStatus;\r\n  readonly articles: Array<ArticleExampleContentType>;\r\n  readonly products: Array<ProductExampleContentType>;\r\n}\r\n\r\ninterface IAppContextProps {\r\n  readonly loadWelcomePage: () => void;\r\n  readonly loadProducts: () => void;\r\n  readonly setProjectId: (projectId: string) => void;\r\n  readonly setLoadingStatus: (loadingStatus: LoadingStatus) => void;\r\n  readonly setProjectIdLoadingStatus: (projectIdLoadingStatus: LoadingStatus) => void;\r\n  readonly setPreviewApiKey: (previewApiKey: string) => void;\r\n  readonly setPreviewApiKeyLoadingStatus: (previewApiKeyLoadingStatus: LoadingStatus) => void;\r\n}\r\n\r\nexport interface IAppContext extends IAppContextState, IAppContextProps {\r\n}\r\n\r\nconst defaultAppContext: IAppContext = {\r\n  dataLoadingStatus: LoadingStatus.NotLoaded,\r\n  dataPollingStatus: PollingStatus.Stopped,\r\n  previewApiKey: '',\r\n  previewApiKeyLoadingStatus: LoadingStatus.NotLoaded,\r\n  projectId: '',\r\n  projectIdLoadingStatus: LoadingStatus.NotLoaded,\r\n  articles: new Array<ArticleExampleContentType>(),\r\n  products: new Array<ProductExampleContentType>(),\r\n  loadWelcomePage: () => undefined,\r\n  loadProducts: () => undefined,\r\n  setProjectId: () => undefined,\r\n  setLoadingStatus: () => undefined,\r\n  setProjectIdLoadingStatus: () => undefined,\r\n  setPreviewApiKey: () => undefined,\r\n  setPreviewApiKeyLoadingStatus: () => undefined,\r\n};\r\n\r\nexport const AppContext = React.createContext<IAppContext>(defaultAppContext);\r\nconst AppContextProvider = AppContext.Provider;\r\nexport const AppContextConsumer = AppContext.Consumer;\r\n\r\nexport class AppContextComponent extends React.PureComponent<{}, IAppContextState> {\r\n\r\n  readonly state = {\r\n    dataLoadingStatus: LoadingStatus.NotLoaded,\r\n    dataPollingStatus: PollingStatus.Stopped,\r\n    previewApiKey: '',\r\n    previewApiKeyLoadingStatus: LoadingStatus.NotLoaded,\r\n    projectId: '',\r\n    projectIdLoadingStatus: LoadingStatus.NotLoaded,\r\n    articles: new Array<ArticleExampleContentType>(),\r\n    products: new Array<ProductExampleContentType>(),\r\n  };\r\n\r\n  private _dataPollingInterval: NodeJS.Timer | null = null;\r\n\r\n  private _startDataPolling = (callback: () => void): void => {\r\n    if (this._dataPollingInterval !== null) {\r\n      clearInterval(this._dataPollingInterval);\r\n    }\r\n\r\n    this._dataPollingInterval = setInterval(async () => {\r\n      this.setState({ dataPollingStatus: PollingStatus.Fetching });\r\n      await callback();\r\n      this.setState({ dataPollingStatus: PollingStatus.Waiting });\r\n    }, 3000);\r\n    this.setState({ dataPollingStatus: PollingStatus.Waiting });\r\n  };\r\n\r\n  setProjectId = (projectId: string) => {\r\n    this.setState({ projectId });\r\n  };\r\n\r\n  setLoadingStatus = (loadingStatus: LoadingStatus) => {\r\n    this.setState({ dataLoadingStatus: loadingStatus });\r\n  };\r\n\r\n  setProjectIdLoadingStatus = (projectIdLoadingStatus: LoadingStatus) => {\r\n    this.setState({ projectIdLoadingStatus });\r\n  };\r\n\r\n  setPreviewApiKey = (previewApiKey: string) => {\r\n    this.setState({ previewApiKey });\r\n  };\r\n\r\n  setPreviewApiKeyLoadingStatus = (previewApiKeyLoadingStatus: LoadingStatus) => {\r\n    this.setState({ previewApiKeyLoadingStatus });\r\n  };\r\n\r\n  private _loadWelcomePageData = async () => {\r\n    const articles = await getAllArticles(this.state.projectId, this.state.previewApiKey);\r\n    this.setState({ articles });\r\n  };\r\n\r\n  loadWelcomePage = async () => {\r\n    this._startDataPolling(this._loadWelcomePageData);\r\n    await this._loadWelcomePageData();\r\n  };\r\n\r\n  private _loadProductsData = async () => {\r\n    const productsPage = await getProductsPage(this.state.projectId, this.state.previewApiKey);\r\n    if (productsPage && productsPage[0]) {\r\n      this.setState({ products: productsPage[0].productList.value as Array<ProductExampleContentType> });\r\n    }\r\n  };\r\n\r\n  loadProducts = async () => {\r\n    this._startDataPolling(this._loadProductsData);\r\n    await this._loadProductsData();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      products,\r\n      articles,\r\n      projectId,\r\n      dataLoadingStatus,\r\n      dataPollingStatus,\r\n      projectIdLoadingStatus,\r\n      previewApiKey,\r\n      previewApiKeyLoadingStatus,\r\n    } = this.state;\r\n\r\n    const contextValue: IAppContext = {\r\n      dataLoadingStatus,\r\n      dataPollingStatus,\r\n      previewApiKey,\r\n      previewApiKeyLoadingStatus,\r\n      projectId,\r\n      projectIdLoadingStatus,\r\n      articles,\r\n      products,\r\n      loadWelcomePage: this.loadWelcomePage,\r\n      loadProducts: this.loadProducts,\r\n      setProjectId: this.setProjectId,\r\n      setLoadingStatus: this.setLoadingStatus,\r\n      setProjectIdLoadingStatus: this.setProjectIdLoadingStatus,\r\n      setPreviewApiKey: this.setPreviewApiKey,\r\n      setPreviewApiKeyLoadingStatus: this.setPreviewApiKeyLoadingStatus,\r\n    };\r\n\r\n    return (\r\n      <AppContextProvider value={contextValue}>\r\n        {this.props.children}\r\n      </AppContextProvider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './NavigationBar.css';\r\nimport {\r\n  ProductsRoute,\r\n  ProjectRoute,\r\n  ProjectRouteParams,\r\n} from '../constants/routePaths';\r\nimport { buildPath } from \"../utils/routeTransitionUtils\";\r\nimport { AppContextConsumer } from \"../context/AppContext\";\r\n\r\nexport class NavigationBar extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <AppContextConsumer>\r\n        {appContext => (\r\n          <div className=\"navigation-bar\">\r\n            <nav className=\"navigation-bar__app-menu\">\r\n              <NavLink\r\n                activeClassName=\"navigation-bar__app-menu-button--active\"\r\n                className=\"navigation-bar__app-menu-button\"\r\n                exact={true}\r\n                to={buildPath<ProjectRouteParams>(ProjectRoute, { projectId: appContext.projectId })}\r\n              >\r\n                Welcome\r\n              </NavLink>\r\n\r\n              <NavLink\r\n                activeClassName=\"navigation-bar__app-menu-button--active\"\r\n                className=\"navigation-bar__app-menu-button\"\r\n                to={buildPath<ProjectRouteParams>(ProductsRoute, { projectId: appContext.projectId })}\r\n              >\r\n                Products\r\n              </NavLink>\r\n            </nav>\r\n          </div>\r\n        )}\r\n      </AppContextConsumer>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport './PageContent.css';\r\n\r\nexport interface IPageContentProps {\r\n  readonly title: string;\r\n}\r\n\r\nexport const PageContent: React.FunctionComponent<IPageContentProps> = ({ title, children }) => (\r\n  <>\r\n    <div className=\"app-title\">\r\n      {title}\r\n    </div>\r\n    <div className=\"app-content\">\r\n      {children}\r\n    </div>\r\n  </>\r\n);\r\n","import React from 'react';\r\nimport {\r\n  AppContextConsumer,\r\n} from '../../context/AppContext';\r\nimport './ProductDetailsPage.css';\r\nimport { ProductDetailsRouteParams } from \"../../constants/routePaths\";\r\nimport { ProductExampleContentType } from \"../../models/Product\";\r\nimport { PageContent } from \"../PageContent\";\r\n\r\ninterface IProductDetailsPage {\r\n  readonly product: ProductExampleContentType;\r\n  readonly init: () => void;\r\n}\r\n\r\nclass ProductDetailsPage extends React.PureComponent<IProductDetailsPage> {\r\n  componentDidMount(): void {\r\n    this.props.init();\r\n  }\r\n\r\n  render() {\r\n    const { product } = this.props;\r\n    if (product) {\r\n      const pictureUrl = product.image.value[0] ? product.image.value[0].url : '';\r\n      return (\r\n        <PageContent title={product.name.value}>\r\n          {pictureUrl && (\r\n            <img\r\n              className=\"product-details__image\"\r\n              alt={product.name.value}\r\n              src={product.image.value[0] ? product.image.value[0].url : ''}\r\n            />\r\n          )}\r\n\r\n          <div\r\n            className=\"product-details__description\"\r\n            dangerouslySetInnerHTML={{ __html: product.description.resolveHtml() }}\r\n          />\r\n        </PageContent>);\r\n    }\r\n\r\n    return <p>There's no such product</p>;\r\n  }\r\n}\r\n\r\ninterface IProductDetailsPageConnectedProps {\r\n  readonly match: {\r\n    readonly params: ProductDetailsRouteParams;\r\n  };\r\n}\r\n\r\nconst ProductDetailsPageConnected: React.FunctionComponent<IProductDetailsPageConnectedProps> = ({ match }) => (\r\n  <AppContextConsumer>\r\n    {appContext => (\r\n      <ProductDetailsPage\r\n        product={appContext.products.filter(product => product.url.value === match.params.productId)[0]}\r\n        init={appContext.loadProducts}\r\n      />\r\n    )}\r\n  </AppContextConsumer>\r\n);\r\n\r\nexport { ProductDetailsPageConnected as ProductDetailsPage }\r\n","export const productImagePlaceholderUrl = `${process.env.REACT_APP_PROJECT_DOMAIN}${process.env.REACT_APP_PROJECT_ROUTE}/placeholder-images.png`;\r\n","import { Link } from \"react-router-dom\";\r\nimport { buildPath } from \"../../utils/routeTransitionUtils\";\r\nimport { ProductDetailsRoute, ProductDetailsRouteParams } from \"../../constants/routePaths\";\r\nimport React from \"react\";\r\nimport './ProductCard.css';\r\nimport { productImagePlaceholderUrl } from \"../../constants/resources\";\r\n\r\ninterface IProductCardPlaceholderProps {\r\n  readonly imageSource: string;\r\n  readonly title: string;\r\n}\r\n\r\nconst ProductCardPlaceholder: React.FunctionComponent<IProductCardPlaceholderProps> = ({ imageSource, title }) => (\r\n  <>\r\n    <div className=\"product-card__thumbnail-wrapper\">\r\n      <img\r\n        className=\"product-card__thumbnail\"\r\n        src={imageSource}\r\n        alt=\"product thumbnail\"\r\n      />\r\n    </div>\r\n    {title ? title : 'Untitled content item'}\r\n  </>\r\n);\r\n\r\ninterface IProductCardProps {\r\n  readonly projectId: string;\r\n  readonly productId: string;\r\n  readonly title: string;\r\n  readonly pictureUrl: string;\r\n}\r\n\r\nexport const ProductCard: React.FunctionComponent<IProductCardProps> =\r\n  ({ projectId, productId, pictureUrl, title }) => {\r\n    const imageSource = pictureUrl ? pictureUrl : productImagePlaceholderUrl;\r\n    return (\r\n      <div className=\"product-card\">\r\n        {productId ? (\r\n            <Link to={buildPath<ProductDetailsRouteParams>(ProductDetailsRoute, { projectId, productId })}>\r\n              <ProductCardPlaceholder imageSource={imageSource} title={title}/>\r\n            </Link>\r\n          ) : (\r\n            <ProductCardPlaceholder imageSource={imageSource} title={title}/>\r\n          )}\r\n      </div>\r\n    );\r\n  };\r\n","import React from 'react';\r\nimport { AppContextConsumer } from '../../context/AppContext';\r\nimport { PageContent } from '../PageContent';\r\nimport './ProductsPage.css';\r\nimport { ProductExampleContentType } from \"../../models/Product\";\r\nimport { ProductCard } from \"./ProductCard\";\r\nimport classNames from \"classnames\";\r\n\r\ninterface IProductsPageProps {\r\n  readonly init: () => void;\r\n  readonly projectId: string;\r\n  readonly products: Array<ProductExampleContentType>;\r\n}\r\n\r\nclass ProductsPage extends React.PureComponent<IProductsPageProps> {\r\n  componentDidMount(): void {\r\n    this.props.init();\r\n  }\r\n\r\n  render() {\r\n    const { projectId, products } = this.props;\r\n    const isSingleProduct = products.length === 1;\r\n    return (\r\n      <PageContent title=\"Products\">\r\n        <div className={classNames(\"products-page\", {\r\n          \"products-page--has-single-product\": isSingleProduct,\r\n        })}>\r\n          {products && products.map((product: ProductExampleContentType) => (\r\n            <ProductCard\r\n              title={product.name.value}\r\n              pictureUrl={product.image.value[0] ? product.image.value[0].url : ''}\r\n              productId={product.url.value}\r\n              projectId={projectId}\r\n              key={product.system.id}\r\n            />)\r\n          )}\r\n        </div>\r\n      </PageContent>\r\n    );\r\n  }\r\n}\r\n\r\nconst ProductsPageConnected = () => (\r\n  <AppContextConsumer>\r\n    {appContext => (\r\n      <ProductsPage\r\n        init={appContext.loadProducts}\r\n        projectId={appContext.projectId}\r\n        products={appContext.products}\r\n      />\r\n    )}\r\n  </AppContextConsumer>\r\n);\r\n\r\nexport { ProductsPageConnected as ProductsPage };\r\n","import React from 'react';\r\nimport { AppContextConsumer } from '../context/AppContext';\r\nimport { PageContent } from './PageContent';\r\nimport { ArticleExampleContentType } from \"../models/Article\";\r\n\r\ninterface IWelcomePageProps {\r\n  readonly article: ArticleExampleContentType;\r\n  readonly init: () => void;\r\n}\r\n\r\nclass WelcomePage extends React.PureComponent<IWelcomePageProps> {\r\n  componentDidMount(): void {\r\n    this.props.init();\r\n  }\r\n\r\n  render() {\r\n    const { article } = this.props;\r\n    if (article) {\r\n      return (\r\n        <PageContent title={article.title.value}>\r\n          <div dangerouslySetInnerHTML={{ __html: article.body.resolveHtml() }} />\r\n        </PageContent>\r\n      );\r\n    }\r\n\r\n    return <p>Missing data for Welcome page</p>;\r\n  }\r\n}\r\n\r\nconst WelcomePageConnected = () => (\r\n  <AppContextConsumer>\r\n    {appContext => (\r\n      <WelcomePage\r\n        article={appContext.articles[0]}\r\n        init={appContext.loadWelcomePage} />\r\n    )}\r\n  </AppContextConsumer>\r\n);\r\n\r\nexport { WelcomePageConnected as WelcomePage }\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { AppContext } from '../context/AppContext';\r\nimport { PollingStatus } from '../enums/PollingStatus';\r\nimport './ProgressBar.css';\r\n\r\nexport const ProgressBar: React.FC = () => {\r\n  const context = useContext(AppContext);\r\n  const [visible, setVisible] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    let timeoutId: number = 0;\r\n    if (context.dataPollingStatus === PollingStatus.Fetching) {\r\n      setVisible(true);\r\n    } else if (visible) {\r\n      timeoutId = window.setTimeout(() => {\r\n        setVisible(false);\r\n      }, 1000);\r\n    }\r\n\r\n    return () => {\r\n      if (timeoutId) {\r\n        clearTimeout(timeoutId);\r\n      }\r\n    };\r\n  }, [context.dataPollingStatus, visible]);\r\n\r\n\r\n  return visible\r\n    ? <div className=\"progress-bar\"/>\r\n    : null;\r\n};\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { NavigationBar } from './components/NavigationBar';\r\nimport { ProductDetailsPage } from './components/Product/ProductDetailsPage';\r\nimport { ProductsPage } from './components/Product/ProductsPage';\r\nimport { ProductDetailsRoute, ProductsRoute, ProjectRoute } from './constants/routePaths';\r\nimport { WelcomePage } from './components/WelcomePage';\r\nimport { ProgressBar } from './components/ProgressBar';\r\n\r\nexport class App extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <ProgressBar/>\r\n        <Route\r\n          path={ProjectRoute}\r\n          component={NavigationBar}\r\n        />\r\n        <div className=\"app__content-wrapper\">\r\n          <Switch>\r\n            <Route\r\n              path={ProjectRoute}\r\n              exact\r\n              component={WelcomePage}\r\n            />\r\n            <Route\r\n              path={ProductDetailsRoute}\r\n              component={ProductDetailsPage}\r\n            />\r\n            <Route\r\n              path={ProductsRoute}\r\n              component={ProductsPage}\r\n            />\r\n            <Route\r\n              render={() => (\r\n                <p>Ooops, missing page!</p>\r\n              )}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import {\r\n  AuthOptions,\r\n  LogoutOptions,\r\n} from 'auth0-js';\r\n\r\nexport const authOptions: AuthOptions = {\r\n  domain: process.env.REACT_APP_AUTH_DOMAIN!,\r\n  clientID: process.env.REACT_APP_AUTH_CLIENT_ID!,\r\n  audience: 'https://app.kenticocloud.com/',\r\n  redirectUri: process.env.REACT_APP_AUTH_REDIRECT_URL,\r\n  responseType: 'token id_token',\r\n  scope: 'openid',\r\n};\r\n\r\nexport const logoutOptions: LogoutOptions = {\r\n  returnTo: process.env.REACT_APP_AUTH_LOGOUT_RETURN_TO,\r\n};\r\n","import auth0 from 'auth0-js';\r\nimport {\r\n  authOptions,\r\n  logoutOptions,\r\n} from './authOptions';\r\nimport { Auth0RedirectUriStorageKey } from \"../constants/localStorageKeys\";\r\nimport { RootRoute, DeployedProjectRootRoute } from \"../constants/routePaths\";\r\n\r\nexport interface IAccessToken {\r\n  readonly accessToken: string;\r\n  readonly expiresAt: number;\r\n}\r\n\r\nexport interface IWebAuth {\r\n  readonly login: () => void;\r\n  readonly logout: () => void;\r\n  readonly silentLogin: () => void;\r\n  readonly handleAuthentication: (onSuccessLogin: (accessToken: IAccessToken, redirectUri: string) => void, onFailedLogin: () => void) => void;\r\n  readonly isAuthenticated: (expiresIn: number) => boolean;\r\n}\r\n\r\nexport class WebAuth implements IWebAuth {\r\n  private webAuth = new auth0.WebAuth(authOptions);\r\n\r\n  login = (): void => {\r\n    this.webAuth.authorize();\r\n  };\r\n\r\n  silentLogin = (): void => {\r\n    localStorage.setItem(Auth0RedirectUriStorageKey, window.location.pathname);\r\n    this.webAuth.authorize({\r\n      prompt: 'none',\r\n    });\r\n  };\r\n\r\n  logout = (): void => {\r\n    this.webAuth.logout(logoutOptions);\r\n  };\r\n\r\n  private getRedirectUri = () => {\r\n    const redirectUriFromStorage = localStorage.getItem(Auth0RedirectUriStorageKey);\r\n    localStorage.removeItem(Auth0RedirectUriStorageKey);\r\n    const redirectUri = redirectUriFromStorage ? redirectUriFromStorage : RootRoute;\r\n\r\n    // todo make nicer\r\n    if (redirectUri.startsWith(DeployedProjectRootRoute)) {\r\n      return redirectUri.slice(DeployedProjectRootRoute.length + 1);\r\n    }\r\n\r\n    return redirectUri;\r\n  };\r\n\r\n  handleAuthentication = (onSuccessLogin: (accessToken: IAccessToken, redirectUri: string) => void, onFailedLogin: () => void): void => {\r\n    this.webAuth.parseHash((err, authResult) => {\r\n      if (authResult && authResult.accessToken && authResult.idToken) {\r\n        const accessToken: IAccessToken = {\r\n          accessToken: authResult.accessToken as string,\r\n          expiresAt: ((authResult.expiresIn || 0) * 1000) + new Date().getTime(),\r\n        };\r\n        const redirectUri = this.getRedirectUri();\r\n        onSuccessLogin(accessToken, redirectUri);\r\n      }\r\n      else if (err) {\r\n        onFailedLogin();\r\n        this.login();\r\n      }\r\n    });\r\n  };\r\n\r\n  isAuthenticated = (expiresAt: number): boolean => {\r\n    // Check whether the current time is past the access token's expiry time\r\n    return new Date().getTime() < expiresAt;\r\n  };\r\n}\r\n","export const Auth0RedirectUriStorageKey = 'redirectUri';\r\n","import React from 'react';\r\n\r\nexport const Loading = (): JSX.Element => {\r\n    return (\r\n      <div>\r\n        <h1>Loading...</h1>\r\n      </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { IAccessToken, WebAuth } from \"../authentication/WebAuth\";\r\nimport { Redirect, Route, RouteComponentProps, Switch, withRouter } from \"react-router\";\r\nimport { Loading } from \"../components/Loading\";\r\nimport { CallbackRoute, RootRoute } from \"../constants/routePaths\";\r\n\r\ninterface IAuthContextState {\r\n  readonly accessToken: string;\r\n  readonly expiresAt: number;\r\n  readonly isLoggedIn: boolean;\r\n}\r\n\r\nexport interface IAuthContext extends IAuthContextState {\r\n  readonly logout: () => void;\r\n}\r\n\r\nconst defaultAuthContext: IAuthContext = {\r\n  accessToken: '',\r\n  expiresAt: 0,\r\n  isLoggedIn: false,\r\n  logout: () => undefined,\r\n};\r\n\r\nconst context = React.createContext<IAuthContext>(defaultAuthContext);\r\nconst AuthContextProvider = context.Provider;\r\nexport const AuthContextConsumer = context.Consumer;\r\n\r\nclass AuthContext extends React.Component<RouteComponentProps, IAuthContextState> {\r\n\r\n  private webAuth = new WebAuth();\r\n\r\n  constructor(props: RouteComponentProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      accessToken: '',\r\n      isLoggedIn: false,\r\n      expiresAt: 0,\r\n    };\r\n  }\r\n\r\n  private isAuthUrlHash = (hash: string): boolean => /access_token|id_token|error/.test(hash);\r\n\r\n  handleAuthCallback = ({ location }: any) => {\r\n    if (this.isAuthUrlHash(location.hash)) {\r\n      this.webAuth.handleAuthentication(this.onSuccessLogin, this.onFailedLogin);\r\n    }\r\n  };\r\n\r\n  onSuccessLogin = (accessToken: IAccessToken, redirectUri: string) => {\r\n    this.setState({\r\n      accessToken: accessToken.accessToken,\r\n      expiresAt: accessToken.expiresAt,\r\n      isLoggedIn: true,\r\n    });\r\n    this.props.history.push(redirectUri);\r\n  };\r\n\r\n  onFailedLogin = () => {\r\n    console.warn('on failed login');\r\n  };\r\n\r\n  componentDidMount() {\r\n    const {silentLogin} = this.webAuth;\r\n    if (!this.isAuthUrlHash(window.location.hash)) {\r\n      silentLogin();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const context: IAuthContext = {\r\n      ...this.state,\r\n      logout: this.webAuth.logout,\r\n    };\r\n\r\n    const { isLoggedIn } = this.state;\r\n\r\n    return (\r\n      <Switch>\r\n        {isLoggedIn ?\r\n          <Redirect\r\n            from={CallbackRoute}\r\n            to={RootRoute}\r\n          /> :\r\n          <Route\r\n            path={CallbackRoute}\r\n            render={props => {\r\n              this.handleAuthCallback(props);\r\n              return <Loading />;\r\n            }}\r\n          />\r\n        }\r\n\r\n        {isLoggedIn && (\r\n          <Route render={() => (\r\n            <AuthContextProvider value={context}>\r\n              {this.props.children}\r\n            </AuthContextProvider>\r\n          )}/>\r\n        )}\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n\r\nconst AuthContextWithRouter = withRouter(AuthContext);\r\nexport { AuthContextWithRouter as AuthContext };\r\n","export type CustomHeaders = {\r\n  [key: string]: string,\r\n};\r\n\r\nexport type RequestType =\r\n  'GET'\r\n  | 'POST'\r\n  | 'PUT'\r\n  | 'DELETE'\r\n  | 'PATCH';\r\n\r\nexport type ProgressCallback = (event: {\r\n  loaded: number;\r\n  total: number;\r\n}) => void;\r\n\r\nexport interface ICreateAjax {\r\n  request: (type: RequestType, url: string, data: any, customHeaders?: CustomHeaders) => Promise<XMLHttpRequest>;\r\n  requestFile: (type: RequestType, url: string, data: any, customHeaders?: CustomHeaders) => Promise<XMLHttpRequest>;\r\n  upload: (url: string, formData: FormData, uploadProgressCallback: ProgressCallback, customHeaders?: CustomHeaders) => Promise<XMLHttpRequest>;\r\n}\r\n\r\nfunction createAjax(withCredentials: any): ICreateAjax {\r\n  return {\r\n    /**\r\n     * Attempts to parse the response as JSON otherwise returns it untouched.\r\n     *\r\n     * @param {string} type The HTTP verb to be used.\r\n     * @param {string} url The url for the XHR request.\r\n     * @param {object} data Optional. The data to be passed with a POST or PUT request.\r\n     * @param {object} customHeaders Optional. Custom headers to be included in a request.\r\n     *\r\n     * @memberof ajax\r\n     */\r\n    request(type: RequestType, url: string, data: any, customHeaders?: CustomHeaders): Promise<XMLHttpRequest> {\r\n      return new Promise<XMLHttpRequest>(resolve => {\r\n        const request = getNewEmptyRequest();\r\n\r\n        request.open(type, url, true);\r\n        request.withCredentials = withCredentials;\r\n\r\n        addCustomHeaders(request, customHeaders);\r\n\r\n        request.onreadystatechange = () => {\r\n          if (request.readyState === 4) {\r\n            resolve(request);\r\n          }\r\n        };\r\n\r\n        request.send(data);\r\n      });\r\n    },\r\n\r\n    requestFile(type: RequestType, url: string, data: any, customHeaders?: CustomHeaders): Promise<XMLHttpRequest> {\r\n      return new Promise<XMLHttpRequest>(resolve => {\r\n        const request = getNewEmptyRequest();\r\n\r\n        request.open(type, url, true);\r\n        request.responseType = 'blob';\r\n        request.withCredentials = withCredentials;\r\n\r\n        addCustomHeaders(request, customHeaders);\r\n\r\n        request.onreadystatechange = () => {\r\n          if (request.readyState === 4) {\r\n            resolve(request);\r\n          }\r\n        };\r\n\r\n        request.send(data);\r\n      });\r\n    },\r\n\r\n    upload(url: string, formData: FormData, uploadProgressCallback: ProgressCallback, customHeaders?: CustomHeaders): Promise<XMLHttpRequest> {\r\n      return new Promise(resolve => {\r\n        const request = getNewEmptyRequest();\r\n\r\n        request.open('POST', url, true);\r\n\r\n        addCustomHeaders(request, customHeaders);\r\n\r\n        request.onreadystatechange = () => {\r\n          if (request.readyState === 4) {\r\n            resolve(request);\r\n          }\r\n        };\r\n\r\n        request.upload.addEventListener('progress', uploadProgressCallback);\r\n        request.send(formData);\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\nfunction addCustomHeaders(request: XMLHttpRequest, customHeaders?: CustomHeaders) {\r\n  if (customHeaders) {\r\n    Object.keys(customHeaders).forEach((header) => {\r\n      const value = customHeaders[header];\r\n      if (header && value) {\r\n        request.setRequestHeader(header, value);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction getNewEmptyRequest(): XMLHttpRequest {\r\n  // if (XMLHttpRequest) {\r\n  return new XMLHttpRequest();\r\n  // }\r\n  // else {\r\n  //   // Set ajax to correct XHR type. Source: https://gist.github.com/jed/993585\r\n  //   return new XMLHttpRequest();\r\n  //   //return new ActiveXObject('MSXML2.XMLHTTP.3.0');\r\n  // }\r\n}\r\n\r\nexport function createAjaxWithCredentials(): ICreateAjax {\r\n  return createAjax(true);\r\n}\r\n\r\n// export function createAjaxWithoutCredentials(): ICreateAjax {\r\n//   return createAjax(false);\r\n// }\r\n","import { RequestType } from './ajax';\r\n\r\nexport interface IRequestContext {\r\n  readonly appInstanceId?: string;\r\n  readonly authToken?: string;\r\n}\r\n\r\nexport type CustomHeaders = {\r\n  [key: string]: string,\r\n};\r\n\r\n\r\nfunction getAuthHeader(accessToken: string): CustomHeaders {\r\n  return { Authorization: `Bearer ${accessToken}` };\r\n}\r\n\r\nfunction getHeaders(defaultHeaders: CustomHeaders, requestContext?: IRequestContext): CustomHeaders {\r\n  if (!requestContext) {\r\n    return defaultHeaders;\r\n  }\r\n\r\n  const newHeaders = requestContext.authToken ? getAuthHeader(requestContext.authToken) : {};\r\n\r\n  if (requestContext.appInstanceId) {\r\n    newHeaders['X-AppInstanceId'] = requestContext.appInstanceId;\r\n  }\r\n\r\n  return { ...defaultHeaders, ...newHeaders };\r\n}\r\n\r\nexport function createRestProvider(ajax: any) {\r\n  function makeRequest(httpVerb: RequestType, url: string, data: any, requestContext?: IRequestContext): Promise<XMLHttpRequest> {\r\n    const headers = getHeaders(\r\n      { 'Content-type': 'application/json' },\r\n      requestContext,\r\n    );\r\n\r\n    const requestBody = data ? prepareDataForSend(data) : null;\r\n    return ajax.request(httpVerb, url, requestBody, headers);\r\n  }\r\n\r\n  return {\r\n    post(url: string, data: any, requestContext?: IRequestContext): Promise<any> {\r\n      return makeRequest('POST', url, data, requestContext)\r\n        .then(verifyStatusCode([200, 201]))\r\n        .then(parseResponse);\r\n    },\r\n  };\r\n}\r\n\r\nfunction prepareDataForSend(data: any): any {\r\n  if (data && typeof data === 'object') {\r\n    // const dto = toDTO(data);\r\n    // return JSON.stringify(dto);\r\n  }\r\n  else if (typeof data === 'string') {\r\n    return JSON.stringify(data);\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\nfunction verifyStatusCode(validStatusCodes: number[]) {\r\n  return (response: XMLHttpRequest) => {\r\n    if (validStatusCodes.indexOf(response.status) >= 0) {\r\n      return response;\r\n    }\r\n    else {\r\n      throw response;\r\n    }\r\n  };\r\n}\r\n\r\nfunction parseResponse(response: XMLHttpRequest) {\r\n  // it might be empty string which can't be parsed by JSON.parse\r\n  if (!response.responseText) {\r\n    return null;\r\n  }\r\n  return JSON.parse(response.responseText);\r\n}\r\n","import { createAjaxWithCredentials } from '../utils/ajax';\r\nimport {\r\n  createRestProvider,\r\n  IRequestContext,\r\n} from '../utils/restProvider';\r\n\r\nconst restProvider = createRestProvider(createAjaxWithCredentials());\r\n\r\nexport interface IPreviewApiKey {\r\n  readonly api_key: string;\r\n  readonly expiresAt: string;\r\n}\r\n\r\nexport const getPreviewApiKey = (authToken: string, projectId: string): Promise<IPreviewApiKey> => {\r\n  const requestContext: IRequestContext = {\r\n    authToken: authToken,\r\n  };\r\n  const url = `${process.env.REACT_APP_KENTICO_CLOUD_URL}/api/project-management/${projectId}/keys/preview-delivery-api-primary`;\r\n  return restProvider.post(url, null, requestContext);\r\n};\r\n","import { IAppContext } from \"../context/AppContext\";\r\nimport { IAuthContext } from \"../context/AuthContext\";\r\nimport { IPreviewApiKey } from \"../repositories/previewApiKeyRepository\";\r\n\r\ninterface ILoadPreviewApiKeyDeps {\r\n  readonly appContext: IAppContext;\r\n  readonly authContext: IAuthContext;\r\n  readonly getPreviewApiKey: (authToken: string, projectId: string) => Promise<IPreviewApiKey>;\r\n}\r\n\r\nexport const createLoadPreviewApiKey = (props: ILoadPreviewApiKeyDeps): () => Promise<string | null> => {\r\n  const { accessToken } = props.authContext;\r\n  const { projectId } = props.appContext;\r\n  return () => props.getPreviewApiKey(accessToken, projectId)\r\n    .then((response: IPreviewApiKey) => {\r\n      return response.api_key;\r\n    })\r\n    .catch(() => {\r\n      return null;\r\n    })\r\n};\r\n","import { matchPath } from \"react-router\";\r\nimport { DeployedProjectRootRoute, ProjectRoute, ProjectRouteParams } from \"../constants/routePaths\";\r\n\r\nexport const getProjectIdFromUrl = (): string | null => {\r\n  if (window.location) {\r\n    const routeToMatch = DeployedProjectRootRoute + ProjectRoute + \"*\";\r\n    const match = matchPath<ProjectRouteParams>(window.location.pathname, routeToMatch);\r\n    if (match) {\r\n      return match.params.projectId;\r\n    }\r\n  }\r\n\r\n  console.warn('no projectId in url');\r\n  return null;\r\n};\r\n","import React from 'react';\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { AuthContextConsumer, IAuthContext } from \"./AuthContext\";\r\nimport { AppContextConsumer, IAppContext } from \"./AppContext\";\r\nimport { Loading } from \"../components/Loading\";\r\nimport { ErrorPage, ErrorPageType } from \"../components/ErrorPage\";\r\nimport { getPreviewApiKey } from \"../repositories/previewApiKeyRepository\";\r\nimport { LoadingStatus } from \"../enums/LoadingStatus\";\r\nimport { createLoadApplicationData } from \"../factories/createLoadApplicationData\";\r\nimport { createLoadPreviewApiKey } from \"../factories/createLoadPreviewApiKey\";\r\nimport { getProjectIdFromUrl } from \"../utils/projectIdUtil\";\r\n\r\ninterface IAppContextInitializationProps extends RouteComponentProps {\r\n  readonly authContext: IAuthContext;\r\n  readonly appContext: IAppContext;\r\n  readonly loadApplicationData: () => void;\r\n}\r\n\r\nclass AppContextInitialization extends React.PureComponent<IAppContextInitializationProps, {}> {\r\n\r\n  componentDidUpdate(): void {\r\n    this.props.loadApplicationData();\r\n  }\r\n\r\n  render() {\r\n    const { projectIdLoadingStatus, previewApiKeyLoadingStatus, dataLoadingStatus } = this.props.appContext;\r\n    if (projectIdLoadingStatus === LoadingStatus.Failed) {\r\n      return <ErrorPage type={ErrorPageType.MissingProjectId}/>\r\n    }\r\n\r\n    if (previewApiKeyLoadingStatus === LoadingStatus.Failed) {\r\n      return <ErrorPage type={ErrorPageType.UnableToGetPreviewApiKey}/>\r\n    }\r\n\r\n    if (dataLoadingStatus === LoadingStatus.Finished) {\r\n      return this.props.children;\r\n    }\r\n\r\n    return <Loading/>\r\n  }\r\n}\r\n\r\nconst AppContextInitializationConnected = (props: RouteComponentProps) => (\r\n  <AppContextConsumer>\r\n    {appContext => (\r\n      <AuthContextConsumer>\r\n        {authContext => {\r\n          const loadApplicationData = createLoadApplicationData({\r\n            appContext,\r\n            getProjectIdFromUrl,\r\n            loadPreviewApikey: createLoadPreviewApiKey({\r\n              authContext,\r\n              appContext,\r\n              getPreviewApiKey,\r\n            })\r\n          });\r\n\r\n          return (\r\n            <AppContextInitialization\r\n              loadApplicationData={loadApplicationData}\r\n              authContext={authContext}\r\n              appContext={appContext}\r\n              {...props}\r\n          />);\r\n        }}\r\n      </AuthContextConsumer>\r\n    )}\r\n  </AppContextConsumer>\r\n);\r\n\r\nconst AppContextInitializationWithRouter = withRouter<RouteComponentProps>(AppContextInitializationConnected);\r\nexport { AppContextInitializationWithRouter as AppContextInitialization };\r\n","import { IAppContext } from \"../context/AppContext\";\r\nimport { LoadingStatus } from \"../enums/LoadingStatus\";\r\n\r\ninterface ILoadApplicationDataDeps {\r\n  readonly appContext: IAppContext;\r\n  readonly loadPreviewApikey: () => Promise<string | null>;\r\n  readonly getProjectIdFromUrl: () => string | null;\r\n}\r\n\r\nexport const createLoadApplicationData = (deps: ILoadApplicationDataDeps) => async (): Promise<void> => {\r\n  const { appContext, loadPreviewApikey, getProjectIdFromUrl } = deps;\r\n\r\n  if (appContext.dataLoadingStatus === LoadingStatus.Finished) {\r\n    return;\r\n  }\r\n\r\n  if (appContext.projectIdLoadingStatus === LoadingStatus.NotLoaded) {\r\n    const projectIdFromUrl = getProjectIdFromUrl();\r\n    if (projectIdFromUrl) {\r\n      appContext.setProjectId(projectIdFromUrl);\r\n      appContext.setProjectIdLoadingStatus(LoadingStatus.Finished);\r\n    } else {\r\n      appContext.setProjectIdLoadingStatus(LoadingStatus.Failed);\r\n    }\r\n  }\r\n\r\n  if (appContext.projectIdLoadingStatus === LoadingStatus.Finished && appContext.previewApiKeyLoadingStatus === LoadingStatus.NotLoaded) {\r\n    appContext.setPreviewApiKeyLoadingStatus(LoadingStatus.InProgress);\r\n    const previewApiKey = await loadPreviewApikey();\r\n    if (previewApiKey) {\r\n      appContext.setPreviewApiKey(previewApiKey);\r\n      appContext.setPreviewApiKeyLoadingStatus(LoadingStatus.Finished);\r\n    }\r\n    else {\r\n      appContext.setPreviewApiKeyLoadingStatus(LoadingStatus.Failed);\r\n    }\r\n  }\r\n\r\n  const requiredDataLoaded = [\r\n    appContext.previewApiKeyLoadingStatus,\r\n    appContext.projectIdLoadingStatus,\r\n  ].every(status => status === LoadingStatus.Finished);\r\n\r\n  if (requiredDataLoaded) {\r\n    appContext.setLoadingStatus(LoadingStatus.Finished);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './App';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { AppContextComponent } from './context/AppContext';\r\nimport { AuthContext } from './context/AuthContext';\r\nimport { AppContextInitialization } from './context/AppContextInitialization';\r\nimport { DeployedProjectRootRoute } from './constants/routePaths';\r\n\r\nReactDOM.render(\r\n  <Router basename={DeployedProjectRootRoute}>\r\n    <AuthContext>\r\n      <AppContextComponent>\r\n        <AppContextInitialization>\r\n          <App/>\r\n        </AppContextInitialization>\r\n      </AppContextComponent>\r\n    </AuthContext>\r\n  </Router>\r\n  , document.getElementById('root'));\r\n"],"sourceRoot":""}