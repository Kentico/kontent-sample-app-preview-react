{"version":3,"sources":["constants/routePaths.ts","utils/routeTransitionUtils.ts","enums/LoadingStatus.ts","enums/PollingStatus.ts","components/ErrorPage.tsx","models/Article.ts","models/LandingPage.ts","models/Product.ts","models/Testimonial.ts","repositories/contentItemRepository.ts","context/AppContext.tsx","components/NavigationBar.tsx","components/PageContent.tsx","components/Product/ProductDetailsPage.tsx","constants/resources.ts","components/Product/ProductCard.tsx","components/Product/ProductsPage.tsx","components/WelcomePage.tsx","components/ProgressBar.tsx","App.tsx","authentication/authOptions.ts","authentication/WebAuth.ts","constants/localStorageKeys.ts","components/Loading.tsx","context/AuthContext.tsx","utils/ajax.ts","utils/restProvider.ts","repositories/previewApiKeyRepository.ts","factories/createLoadPreviewApiKey.ts","utils/projectIdUtil.ts","context/AppContextInitialization.tsx","factories/createLoadApplicationData.ts","index.tsx"],"names":["DeployedProjectRootRoute","process","CallbackRoute","ProjectRoute","ProductsRoute","ProductDetailsRoute","buildPath","route","params","compile","LoadingStatus","PollingStatus","ErrorPageType","ArticleExampleContentType","body","title","url","ContentItem","LandingPageExampleContentType","propertyResolver","elementName","productList","ProductExampleContentType","description","name","image","taxonomyCategorizingTargetAudience","Testimonial","richTextResolver","item","getImageElement","value","testimonialText","deliveryClient","ensureDeliveryClient","projectId","previewApiKey","DeliveryClient","proxy","basePreviewUrl","typeResolvers","TypeResolver","globalQueryConfig","usePreviewMode","getAllArticles","Error","items","type","toPromise","then","response","catch","reason","console","log","Array","getProductsPage","getProductDetailsByUrlSlug","urlPattern","equalsFilter","firstItem","defaultAppContext","dataLoadingStatus","NotLoaded","dataPollingStatus","Stopped","previewApiKeyLoadingStatus","projectIdLoadingStatus","articles","productsByUrlSlug","loadWelcomePage","loadProduct","loadProducts","getProducts","setProjectId","setLoadingStatus","setProjectIdLoadingStatus","setPreviewApiKey","setPreviewApiKeyLoadingStatus","AppContext","React","createContext","AppContextProvider","Provider","AppContextConsumer","Consumer","AppContextComponent","state","_dataPollingInterval","_startDataPolling","callback","clearInterval","setInterval","a","async","setState","Fetching","Waiting","loadingStatus","_loadWelcomePageData","_loadProductsData","productsPage","newProducts","reduce","byId","product","Object","assign","_loadProductData","productUrlSlug","values","this","contextValue","props","children","PureComponent","NavigationBar","appContext","className","activeClassName","exact","to","PageContent","ProductDetailsPage","init","pictureUrl","alt","src","dangerouslySetInnerHTML","__html","resolveHtml","ProductDetailsPageConnected","match","productImagePlaceholderUrl","ProductCardPlaceholder","imageSource","ProductCard","productId","ProductsPage","products","isSingleProduct","length","classNames","map","key","system","id","ProductsPageConnected","WelcomePage","article","WelcomePageConnected","ProgressBar","context","useContext","useState","visible","setVisible","useEffect","timeoutId","window","setTimeout","clearTimeout","App","path","component","render","authOptions","domain","clientID","audience","redirectUri","responseType","scope","logoutOptions","returnTo","WebAuth","webAuth","auth0","login","authorize","silentLogin","localStorage","setItem","location","pathname","prompt","logout","getRedirectUri","redirectUriFromStorage","getItem","removeItem","startsWith","slice","handleAuthentication","onSuccessLogin","onFailedLogin","parseHash","err","authResult","accessToken","idToken","expiresAt","expiresIn","Date","getTime","isAuthenticated","Loading","defaultAuthContext","isLoggedIn","AuthContextProvider","AuthContextConsumer","AuthContext","isAuthUrlHash","hash","test","handleAuthCallback","history","push","warn","from","Component","AuthContextWithRouter","withRouter","projectIdUrlTemplate","MissingProjectIdErrorPageContent","UnableToGetPreviewApiKeyErrorPageContent","ErrorPage","MissingProjectId","UnableToGetPreviewApiKey","addCustomHeaders","request","customHeaders","keys","forEach","header","setRequestHeader","getNewEmptyRequest","XMLHttpRequest","parseResponse","responseText","JSON","parse","restProvider","ajax","makeRequest","httpVerb","data","requestContext","headers","defaultHeaders","newHeaders","authToken","Authorization","appInstanceId","getHeaders","requestBody","stringify","prepareDataForSend","post","validStatusCodes","indexOf","status","createRestProvider","withCredentials","Promise","resolve","open","onreadystatechange","readyState","send","requestFile","upload","formData","uploadProgressCallback","addEventListener","createAjaxWithCredentials","getPreviewApiKey","createLoadPreviewApiKey","authContext","api_key","getProjectIdFromUrl","routeToMatch","matchPath","AppContextInitialization","loadApplicationData","Failed","Finished","AppContextInitializationWithRouter","deps","loadPreviewApikey","projectIdFromUrl","InProgress","every","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.4b342e60.chunk.js","sourcesContent":["const uuidPattern = '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}';\n\nexport const DeployedProjectRootRoute = `${process.env.REACT_APP_PROJECT_ROUTE}`;\n\nexport const RootRoute = '/';\nexport const CallbackRoute = `${RootRoute}callback`;\n\nexport const ProjectRoute = `${RootRoute}:projectId(${uuidPattern})`;\nexport const ProductsRoute = `${ProjectRoute}/products`;\nexport const ProductDetailsRoute = `${ProductsRoute}/:productUrlSlug`;\n\nexport type ProjectRouteParams = {\n  readonly projectId: string;\n};\n\nexport type ProductDetailsRouteParams = ProjectRouteParams & {\n  readonly productUrlSlug: string;\n}\n","import { compile } from \"path-to-regexp\";\r\n\r\ninterface IDictionary<T> {\r\n  readonly [key: string]: T | undefined;\r\n}\r\n\r\nexport function buildPath<TRouteParams = IDictionary<string>>(route: string, params: TRouteParams): string {\r\n  return compile(route)(params as any as object);\r\n}\r\n","export enum LoadingStatus {\r\n  NotLoaded = 'notLoaded',\r\n  InProgress = 'inProgress',\r\n  Finished = 'finished',\r\n  Failed = 'failed',\r\n}\r\n","export enum PollingStatus {\r\n  Stopped = 'Stopped',\r\n  Fetching = 'Fetching',\r\n  Waiting = 'Waiting',\r\n}\r\n","import React from 'react';\r\n\r\nexport enum ErrorPageType {\r\n  MissingProjectId = 'missingProjectId',\r\n  UnableToGetPreviewApiKey = 'unableToGetPreviewApiKey',\r\n}\r\n\r\ninterface IErrorPageProps {\r\n  readonly type: ErrorPageType;\r\n}\r\n\r\nconst projectIdUrlTemplate = \"https://kentico.github.io/kontent-sample-app-preview-react/<your_project_id>\";\r\n\r\nconst MissingProjectIdErrorPageContent: React.FunctionComponent = () => (\r\n  <p>Didn't you forget to provide Project Id in the url? E.g. <i>{projectIdUrlTemplate}</i></p>\r\n);\r\n\r\nconst UnableToGetPreviewApiKeyErrorPageContent: React.FunctionComponent = () => (\r\n  <>\r\n    <p>There was problem retrieving Preview Api Key.</p>\r\n    <p>Did you provide correct Project Id? E.g. <i>{projectIdUrlTemplate}</i></p>\r\n  </>\r\n);\r\n\r\nexport const ErrorPage: React.FunctionComponent<IErrorPageProps> = ({ type }) => (\r\n  <>\r\n    <div className=\"navigation-bar\">\r\n      <nav className=\"navigation-bar__app-menu\"/>\r\n    </div>\r\n\r\n    <p>Ooops, there was some error!</p>\r\n    {type === ErrorPageType.MissingProjectId && (\r\n      <MissingProjectIdErrorPageContent/>\r\n    )}\r\n\r\n    {type === ErrorPageType.UnableToGetPreviewApiKey && (\r\n      <UnableToGetPreviewApiKeyErrorPageContent/>\r\n    )}\r\n  </>\r\n);\r\n\r\n","\nimport { ContentItem, Elements } from '@kentico/kontent-delivery';\n\n/**\n * Generated by '@kentico/kontent-model-generator@3.0.0'\n * Timestamp: Thu Feb 20 2020 08:40:57 GMT+0100 (GMT+01:00)\n *\n * Tip: You can replace 'ContentItem' with another generated class to fully leverage strong typing.\n */\nexport class ArticleExampleContentType extends ContentItem {\n  public body!: Elements.RichTextElement;\n  public title!: Elements.TextElement;\n  public url!: Elements.UrlSlugElement;\n}\n","\nimport { ContentItem, Elements } from '@kentico/kontent-delivery';\n\n/**\n * Generated by '@kentico/kontent-model-generator@3.0.0'\n * Timestamp: Thu Feb 20 2020 08:40:57 GMT+0100 (GMT+01:00)\n *\n * Tip: You can replace 'ContentItem' with another generated class to fully leverage strong typing.\n */\nexport class LandingPageExampleContentType extends ContentItem {\n  public body!: Elements.RichTextElement;\n  public productList!: Elements.LinkedItemsElement<ContentItem>;\n  public title!: Elements.TextElement;\n  public url!: Elements.UrlSlugElement;\n  constructor() {\n    super({\n      propertyResolver: ((elementName: string) => {\n        if (elementName === 'product_list') {\n          return 'productList';\n        }\n        return elementName;\n      })\n    });\n  }\n}\n","\nimport { ContentItem, Elements } from '@kentico/kontent-delivery';\n\n/**\n * Generated by '@kentico/kontent-model-generator@3.0.0'\n * Timestamp: Thu Feb 20 2020 08:40:57 GMT+0100 (GMT+01:00)\n *\n * Tip: You can replace 'ContentItem' with another generated class to fully leverage strong typing.\n */\nexport class ProductExampleContentType extends ContentItem {\n  public url!: Elements.UrlSlugElement;\n  public description!: Elements.RichTextElement;\n  public name!: Elements.TextElement;\n  public image!: Elements.AssetsElement;\n  public taxonomyCategorizingTargetAudience!: Elements.TaxonomyElement;\n  constructor() {\n    super({\n      propertyResolver: ((elementName: string) => {\n        if (elementName === 'taxonomy___categorizing_target_audience') {\n          return 'taxonomyCategorizingTargetAudience';\n        }\n        return elementName;\n      })\n    });\n  }\n}\n","\nimport { ContentItem, Elements } from '@kentico/kontent-delivery';\n\n/**\n * Generated by '@kentico/kontent-model-generator@3.0.0'\n * Timestamp: Thu Feb 20 2020 08:40:57 GMT+0100 (GMT+01:00)\n *\n * Tip: You can replace 'ContentItem' with another generated class to fully leverage strong typing.\n */\nexport class Testimonial extends ContentItem {\n  public testimonialText!: Elements.RichTextElement;\n  public image!: Elements.AssetsElement;\n  public title!: Elements.TextElement;\n\n  getImageElement = (item: Testimonial): string => {\n    if (item.image && item.image.value[0]) {\n      return `<img class='testimonial__image' src=\"${item.image.value[0].url}\"/>`\n    }\n    return '';\n  };\n\n  constructor() {\n    super({\n      propertyResolver: ((elementName: string) => {\n        if (elementName === 'testimonial_text') {\n          return 'testimonialText';\n        }\n        return elementName;\n      }),\n      richTextResolver: ((item: Testimonial) => {\n        return `<div class='testimonial'>\n            ${this.getImageElement(item)}\n            <div class='testimonial__body-wrapper'>\n                <div class='testimonial__body-heading'>${item.title.value}</div>\n                <div class='testimonial__body-text'>${item.testimonialText.value}</div>\n            </div>\n          </div>`;\n      })\n    });\n  }\n}\n","import { ArticleExampleContentType } from \"../models/Article\";\nimport { DeliveryClient, IDeliveryClient, TypeResolver } from \"@kentico/kontent-delivery\";\nimport { LandingPageExampleContentType } from \"../models/LandingPage\";\nimport { ProductExampleContentType } from \"../models/Product\";\nimport {Testimonial} from \"../models/Testimonial\";\n\nlet deliveryClient: IDeliveryClient | null = null;\n\nconst ensureDeliveryClient = (projectId: string, previewApiKey: string): void => {\n  if (deliveryClient) {\n    return;\n  }\n\n  deliveryClient = new DeliveryClient({\n    previewApiKey,\n    projectId: projectId,\n    proxy: {\n      basePreviewUrl: process.env.REACT_APP_DELIVER_URL,\n    },\n    typeResolvers: [\n      new TypeResolver('article_example_content_type', () => new ArticleExampleContentType()),\n      new TypeResolver('landing_page_example_content_type', () => new LandingPageExampleContentType()),\n      new TypeResolver('product_example_content_type', () => new ProductExampleContentType()),\n      new TypeResolver('testimonial___critic_favorite', () => new Testimonial()),\n    ],\n    globalQueryConfig: {\n      usePreviewMode: true,\n    }\n  });\n};\n\n\nexport const getAllArticles = (projectId: string, previewApiKey: string): Promise<Array<ArticleExampleContentType>> => {\n  ensureDeliveryClient(projectId, previewApiKey);\n  if (!deliveryClient) {\n    throw new Error('Delivery client is not initialized yet');\n  }\n\n  return deliveryClient.items<ArticleExampleContentType>()\n    .type('article_example_content_type')\n    .toPromise()\n    .then(response => {\n      return response.items;\n    })\n    .catch(reason => {\n      console.log(reason);\n      return new Array<ArticleExampleContentType>();\n    });\n};\n\nexport const getProductsPage = (projectId: string, previewApiKey: string): Promise<Array<LandingPageExampleContentType>> => {\n  ensureDeliveryClient(projectId, previewApiKey);\n  if (!deliveryClient) {\n    throw new Error('Delivery client is not initialized yet');\n  }\n\n  return deliveryClient.items<LandingPageExampleContentType>()\n    .type('landing_page_example_content_type')\n    .toPromise()\n    .then(response => {\n      return response.items;\n    })\n    .catch(reason => {\n      console.log(reason);\n      return new Array<LandingPageExampleContentType>();\n    });\n};\n\nexport const getProductDetailsByUrlSlug = (projectId: string, previewApiKey: string, urlPattern: string): Promise<ProductExampleContentType | undefined | void> => {\n  ensureDeliveryClient(projectId, previewApiKey);\n  if (!deliveryClient) {\n    throw new Error('Delivery client is not initialized yet');\n  }\n\n  return deliveryClient.items<ProductExampleContentType>()\n    .type('product_example_content_type')\n    .equalsFilter('elements.url', urlPattern)\n    .toPromise()\n    .then(response => {\n      return response.firstItem;\n    })\n    .catch(reason => {\n      console.log(reason);\n    })\n};\n","import React from 'react';\nimport { clearInterval, setInterval } from 'timers';\nimport { LoadingStatus } from '../enums/LoadingStatus';\nimport { PollingStatus } from '../enums/PollingStatus';\nimport { ArticleExampleContentType } from '../models/Article';\nimport { ProductExampleContentType } from '../models/Product';\nimport { getAllArticles, getProductsPage, getProductDetailsByUrlSlug } from '../repositories/contentItemRepository';\n\ninterface IAppContextState {\n  readonly dataLoadingStatus: LoadingStatus;\n  readonly dataPollingStatus: PollingStatus;\n  readonly previewApiKey: string;\n  readonly previewApiKeyLoadingStatus: LoadingStatus;\n  readonly projectId: string;\n  readonly projectIdLoadingStatus: LoadingStatus;\n  readonly articles: Array<ArticleExampleContentType>;\n  readonly productsByUrlSlug: {[key: string]: ProductExampleContentType};\n}\n\ninterface IAppContextProps {\n  readonly loadWelcomePage: () => void;\n  readonly loadProduct: (productUrlSlug: string) => void;\n  readonly loadProducts: () => void;\n  readonly getProducts: () => Array<ProductExampleContentType>;\n  readonly setProjectId: (projectId: string) => void;\n  readonly setLoadingStatus: (loadingStatus: LoadingStatus) => void;\n  readonly setProjectIdLoadingStatus: (projectIdLoadingStatus: LoadingStatus) => void;\n  readonly setPreviewApiKey: (previewApiKey: string) => void;\n  readonly setPreviewApiKeyLoadingStatus: (previewApiKeyLoadingStatus: LoadingStatus) => void;\n}\n\nexport interface IAppContext extends IAppContextState, IAppContextProps {\n}\n\nconst defaultAppContext: IAppContext = {\n  dataLoadingStatus: LoadingStatus.NotLoaded,\n  dataPollingStatus: PollingStatus.Stopped,\n  previewApiKey: '',\n  previewApiKeyLoadingStatus: LoadingStatus.NotLoaded,\n  projectId: '',\n  projectIdLoadingStatus: LoadingStatus.NotLoaded,\n  articles: new Array<ArticleExampleContentType>(),\n  productsByUrlSlug: {},\n  loadWelcomePage: () => undefined,\n  loadProduct: () => undefined,\n  loadProducts: () => undefined,\n  getProducts: () => [],\n  setProjectId: () => undefined,\n  setLoadingStatus: () => undefined,\n  setProjectIdLoadingStatus: () => undefined,\n  setPreviewApiKey: () => undefined,\n  setPreviewApiKeyLoadingStatus: () => undefined,\n};\n\nexport const AppContext = React.createContext<IAppContext>(defaultAppContext);\nconst AppContextProvider = AppContext.Provider;\nexport const AppContextConsumer = AppContext.Consumer;\n\nexport class AppContextComponent extends React.PureComponent<{}, IAppContextState> {\n\n  readonly state = {\n    dataLoadingStatus: LoadingStatus.NotLoaded,\n    dataPollingStatus: PollingStatus.Stopped,\n    previewApiKey: '',\n    previewApiKeyLoadingStatus: LoadingStatus.NotLoaded,\n    projectId: '',\n    projectIdLoadingStatus: LoadingStatus.NotLoaded,\n    articles: new Array<ArticleExampleContentType>(),\n    productsByUrlSlug: {},\n  };\n\n  private _dataPollingInterval: NodeJS.Timer | null = null;\n\n  private _startDataPolling = (callback: () => void): void => {\n    if (this._dataPollingInterval !== null) {\n      clearInterval(this._dataPollingInterval);\n    }\n\n    this._dataPollingInterval = setInterval(async () => {\n      this.setState({ dataPollingStatus: PollingStatus.Fetching });\n      await callback();\n      this.setState({ dataPollingStatus: PollingStatus.Waiting });\n    }, 3000);\n    this.setState({ dataPollingStatus: PollingStatus.Waiting });\n  };\n\n  setProjectId = (projectId: string) => {\n    this.setState({ projectId });\n  };\n\n  setLoadingStatus = (loadingStatus: LoadingStatus) => {\n    this.setState({ dataLoadingStatus: loadingStatus });\n  };\n\n  setProjectIdLoadingStatus = (projectIdLoadingStatus: LoadingStatus) => {\n    this.setState({ projectIdLoadingStatus });\n  };\n\n  setPreviewApiKey = (previewApiKey: string) => {\n    this.setState({ previewApiKey });\n  };\n\n  setPreviewApiKeyLoadingStatus = (previewApiKeyLoadingStatus: LoadingStatus) => {\n    this.setState({ previewApiKeyLoadingStatus });\n  };\n\n  private _loadWelcomePageData = async () => {\n    const articles = await getAllArticles(this.state.projectId, this.state.previewApiKey);\n    this.setState({ articles });\n  };\n\n  loadWelcomePage = async () => {\n    this._startDataPolling(this._loadWelcomePageData);\n    await this._loadWelcomePageData();\n  };\n\n  private _loadProductsData = async () => {\n    const productsPage = await getProductsPage(this.state.projectId, this.state.previewApiKey);\n    if (productsPage && productsPage[0]) {\n      const newProducts = productsPage[0].productList.value as Array<ProductExampleContentType>;\n      this.setState((state) => ({ productsByUrlSlug: newProducts\n          .reduce((byId, product: ProductExampleContentType) => ({...byId, [product.url.value]: product}),\n            Object.assign({}, state.productsByUrlSlug))\n      }));\n    }\n  };\n\n  loadProducts = async () => {\n    this._startDataPolling(this._loadProductsData);\n    await this._loadProductsData();\n  };\n\n  private _loadProductData = async (productUrlSlug: string) => {\n    const product = await getProductDetailsByUrlSlug(this.state.projectId, this.state.previewApiKey, productUrlSlug);\n    if (product) {\n      this.setState((state) => ({ productsByUrlSlug: ({...Object.assign({}, state.productsByUrlSlug), [product.url.value]: product})}));\n    }\n  };\n\n  loadProduct = async (productUrlSlug: string) => {\n    this._startDataPolling(() => this._loadProductData(productUrlSlug));\n    await this._loadProductData(productUrlSlug);\n  };\n\n  getProducts = (): Array<ProductExampleContentType> => Object.values(this.state.productsByUrlSlug);\n\n  render() {\n    const {\n      productsByUrlSlug,\n      articles,\n      projectId,\n      dataLoadingStatus,\n      dataPollingStatus,\n      projectIdLoadingStatus,\n      previewApiKey,\n      previewApiKeyLoadingStatus,\n    } = this.state;\n\n    const contextValue: IAppContext = {\n      dataLoadingStatus,\n      dataPollingStatus,\n      previewApiKey,\n      previewApiKeyLoadingStatus,\n      projectId,\n      projectIdLoadingStatus,\n      articles,\n      productsByUrlSlug,\n      loadWelcomePage: this.loadWelcomePage,\n      loadProduct: this.loadProduct,\n      loadProducts: this.loadProducts,\n      getProducts: this.getProducts,\n      setProjectId: this.setProjectId,\n      setLoadingStatus: this.setLoadingStatus,\n      setProjectIdLoadingStatus: this.setProjectIdLoadingStatus,\n      setPreviewApiKey: this.setPreviewApiKey,\n      setPreviewApiKeyLoadingStatus: this.setPreviewApiKeyLoadingStatus,\n    };\n\n    return (\n      <AppContextProvider value={contextValue}>\n        {this.props.children}\n      </AppContextProvider>\n    );\n  }\n}\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './NavigationBar.css';\r\nimport {\r\n  ProductsRoute,\r\n  ProjectRoute,\r\n  ProjectRouteParams,\r\n} from '../constants/routePaths';\r\nimport { buildPath } from \"../utils/routeTransitionUtils\";\r\nimport { AppContextConsumer } from \"../context/AppContext\";\r\n\r\nexport class NavigationBar extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <AppContextConsumer>\r\n        {appContext => (\r\n          <div className=\"navigation-bar\">\r\n            <nav className=\"navigation-bar__app-menu\">\r\n              <NavLink\r\n                activeClassName=\"navigation-bar__app-menu-button--active\"\r\n                className=\"navigation-bar__app-menu-button\"\r\n                exact={true}\r\n                to={buildPath<ProjectRouteParams>(ProjectRoute, { projectId: appContext.projectId })}\r\n              >\r\n                Welcome\r\n              </NavLink>\r\n\r\n              <NavLink\r\n                activeClassName=\"navigation-bar__app-menu-button--active\"\r\n                className=\"navigation-bar__app-menu-button\"\r\n                to={buildPath<ProjectRouteParams>(ProductsRoute, { projectId: appContext.projectId })}\r\n              >\r\n                Products\r\n              </NavLink>\r\n            </nav>\r\n          </div>\r\n        )}\r\n      </AppContextConsumer>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport './PageContent.css';\r\n\r\nexport interface IPageContentProps {\r\n  readonly title: string;\r\n}\r\n\r\nexport const PageContent: React.FunctionComponent<IPageContentProps> = ({ title, children }) => (\r\n  <>\r\n    <div className=\"app-title\">\r\n      {title}\r\n    </div>\r\n    <div className=\"app-content\">\r\n      {children}\r\n    </div>\r\n  </>\r\n);\r\n","import React from 'react';\nimport {\n  AppContextConsumer,\n} from '../../context/AppContext';\nimport './ProductDetailsPage.css';\nimport './Testimonial.css';\nimport { ProductDetailsRouteParams } from \"../../constants/routePaths\";\nimport { ProductExampleContentType } from \"../../models/Product\";\nimport { PageContent } from \"../PageContent\";\n\ninterface IProductDetailsPage {\n  readonly product: ProductExampleContentType;\n  readonly init: () => void;\n}\n\nclass ProductDetailsPage extends React.PureComponent<IProductDetailsPage> {\n  componentDidMount(): void {\n    this.props.init();\n  }\n\n  render() {\n    const { product } = this.props;\n    if (product) {\n      const pictureUrl = product.image.value[0] ? product.image.value[0].url : '';\n      return (\n        <PageContent title={product.name.value}>\n          {pictureUrl && (\n            <img\n              className=\"product-details__image\"\n              alt={product.name.value}\n              src={product.image.value[0] ? product.image.value[0].url : ''}\n            />\n          )}\n\n          <div\n            className=\"product-details__description\"\n            dangerouslySetInnerHTML={{ __html: product.description.resolveHtml() }}\n          />\n        </PageContent>);\n    }\n\n    return <p>There's no such product</p>;\n  }\n}\n\ninterface IProductDetailsPageConnectedProps {\n  readonly match: {\n    readonly params: ProductDetailsRouteParams;\n  };\n}\n\nconst ProductDetailsPageConnected: React.FunctionComponent<IProductDetailsPageConnectedProps> = ({ match }) => (\n  <AppContextConsumer>\n    {appContext => (\n      <ProductDetailsPage\n        product={appContext.productsByUrlSlug[match.params.productUrlSlug]}\n        init={() => appContext.loadProduct(match.params.productUrlSlug)}\n      />\n    )}\n  </AppContextConsumer>\n);\n\nexport { ProductDetailsPageConnected as ProductDetailsPage }\n","export const productImagePlaceholderUrl = `${process.env.REACT_APP_PROJECT_DOMAIN}${process.env.REACT_APP_PROJECT_ROUTE}/placeholder-images.png`;\r\n","import { Link } from \"react-router-dom\";\nimport { buildPath } from \"../../utils/routeTransitionUtils\";\nimport { ProductDetailsRoute, ProductDetailsRouteParams } from \"../../constants/routePaths\";\nimport React from \"react\";\nimport './ProductCard.css';\nimport { productImagePlaceholderUrl } from \"../../constants/resources\";\n\ninterface IProductCardPlaceholderProps {\n  readonly imageSource: string;\n  readonly title: string;\n}\n\nconst ProductCardPlaceholder: React.FunctionComponent<IProductCardPlaceholderProps> = ({ imageSource, title }) => (\n  <>\n    <div className=\"product-card__thumbnail-wrapper\">\n      <img\n        className=\"product-card__thumbnail\"\n        src={imageSource}\n        alt=\"product thumbnail\"\n      />\n    </div>\n    {title ? title : 'Untitled content item'}\n  </>\n);\n\ninterface IProductCardProps {\n  readonly projectId: string;\n  readonly productId: string;\n  readonly title: string;\n  readonly pictureUrl: string;\n}\n\nexport const ProductCard: React.FunctionComponent<IProductCardProps> =\n  ({ projectId, productId, pictureUrl, title }) => {\n    const imageSource = pictureUrl ? pictureUrl : productImagePlaceholderUrl;\n    return (\n      <div className=\"product-card\">\n        {productId ? (\n            <Link to={buildPath<ProductDetailsRouteParams>(ProductDetailsRoute, { projectId, productUrlSlug: productId })}>\n              <ProductCardPlaceholder imageSource={imageSource} title={title}/>\n            </Link>\n          ) : (\n            <ProductCardPlaceholder imageSource={imageSource} title={title}/>\n          )}\n      </div>\n    );\n  };\n","import React from 'react';\nimport { AppContextConsumer } from '../../context/AppContext';\nimport { PageContent } from '../PageContent';\nimport './ProductsPage.css';\nimport { ProductExampleContentType } from \"../../models/Product\";\nimport { ProductCard } from \"./ProductCard\";\nimport classNames from \"classnames\";\n\ninterface IProductsPageProps {\n  readonly init: () => void;\n  readonly projectId: string;\n  readonly products: Array<ProductExampleContentType>;\n}\n\nclass ProductsPage extends React.PureComponent<IProductsPageProps> {\n  componentDidMount(): void {\n    this.props.init();\n  }\n\n  render() {\n    const { projectId, products } = this.props;\n    const isSingleProduct = products.length === 1;\n    return (\n      <PageContent title=\"Products\">\n        <div className={classNames(\"products-page\", {\n          \"products-page--has-single-product\": isSingleProduct,\n        })}>\n          {products && products.map((product: ProductExampleContentType) => (\n            <ProductCard\n              title={product.name.value}\n              pictureUrl={product.image.value[0] ? product.image.value[0].url : ''}\n              productId={product.url.value}\n              projectId={projectId}\n              key={product.system.id}\n            />)\n          )}\n        </div>\n      </PageContent>\n    );\n  }\n}\n\nconst ProductsPageConnected = () => (\n  <AppContextConsumer>\n    {appContext => (\n      <ProductsPage\n        init={appContext.loadProducts}\n        projectId={appContext.projectId}\n        products={appContext.getProducts()}\n      />\n    )}\n  </AppContextConsumer>\n);\n\nexport { ProductsPageConnected as ProductsPage };\n","import React from 'react';\r\nimport { AppContextConsumer } from '../context/AppContext';\r\nimport { PageContent } from './PageContent';\r\nimport { ArticleExampleContentType } from \"../models/Article\";\r\n\r\ninterface IWelcomePageProps {\r\n  readonly article: ArticleExampleContentType;\r\n  readonly init: () => void;\r\n}\r\n\r\nclass WelcomePage extends React.PureComponent<IWelcomePageProps> {\r\n  componentDidMount(): void {\r\n    this.props.init();\r\n  }\r\n\r\n  render() {\r\n    const { article } = this.props;\r\n    if (article) {\r\n      return (\r\n        <PageContent title={article.title.value}>\r\n          <div dangerouslySetInnerHTML={{ __html: article.body.resolveHtml() }} />\r\n        </PageContent>\r\n      );\r\n    }\r\n\r\n    return <p>Missing data for Welcome page</p>;\r\n  }\r\n}\r\n\r\nconst WelcomePageConnected = () => (\r\n  <AppContextConsumer>\r\n    {appContext => (\r\n      <WelcomePage\r\n        article={appContext.articles[0]}\r\n        init={appContext.loadWelcomePage} />\r\n    )}\r\n  </AppContextConsumer>\r\n);\r\n\r\nexport { WelcomePageConnected as WelcomePage }\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { AppContext } from '../context/AppContext';\r\nimport { PollingStatus } from '../enums/PollingStatus';\r\nimport './ProgressBar.css';\r\n\r\nexport const ProgressBar: React.FC = () => {\r\n  const context = useContext(AppContext);\r\n  const [visible, setVisible] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    let timeoutId: number = 0;\r\n    if (context.dataPollingStatus === PollingStatus.Fetching) {\r\n      setVisible(true);\r\n    } else if (visible) {\r\n      timeoutId = window.setTimeout(() => {\r\n        setVisible(false);\r\n      }, 1000);\r\n    }\r\n\r\n    return () => {\r\n      if (timeoutId) {\r\n        clearTimeout(timeoutId);\r\n      }\r\n    };\r\n  }, [context.dataPollingStatus, visible]);\r\n\r\n\r\n  return visible\r\n    ? <div className=\"progress-bar\"/>\r\n    : null;\r\n};\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { NavigationBar } from './components/NavigationBar';\r\nimport { ProductDetailsPage } from './components/Product/ProductDetailsPage';\r\nimport { ProductsPage } from './components/Product/ProductsPage';\r\nimport { ProductDetailsRoute, ProductsRoute, ProjectRoute } from './constants/routePaths';\r\nimport { WelcomePage } from './components/WelcomePage';\r\nimport { ProgressBar } from './components/ProgressBar';\r\n\r\nexport class App extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <ProgressBar/>\r\n        <Route\r\n          path={ProjectRoute}\r\n          component={NavigationBar}\r\n        />\r\n        <div className=\"app__content-wrapper\">\r\n          <Switch>\r\n            <Route\r\n              path={ProjectRoute}\r\n              exact\r\n              component={WelcomePage}\r\n            />\r\n            <Route\r\n              path={ProductDetailsRoute}\r\n              component={ProductDetailsPage}\r\n            />\r\n            <Route\r\n              path={ProductsRoute}\r\n              component={ProductsPage}\r\n            />\r\n            <Route\r\n              render={() => (\r\n                <p>Ooops, missing page!</p>\r\n              )}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import {\r\n  AuthOptions,\r\n  LogoutOptions,\r\n} from 'auth0-js';\r\n\r\nexport const authOptions: AuthOptions = {\r\n  domain: process.env.REACT_APP_AUTH_DOMAIN!,\r\n  clientID: process.env.REACT_APP_AUTH_CLIENT_ID!,\r\n  audience: 'https://app.kenticocloud.com/',\r\n  redirectUri: process.env.REACT_APP_AUTH_REDIRECT_URL,\r\n  responseType: 'token id_token',\r\n  scope: 'openid',\r\n};\r\n\r\nexport const logoutOptions: LogoutOptions = {\r\n  returnTo: process.env.REACT_APP_AUTH_LOGOUT_RETURN_TO,\r\n};\r\n","import auth0 from 'auth0-js';\r\nimport {\r\n  authOptions,\r\n  logoutOptions,\r\n} from './authOptions';\r\nimport { Auth0RedirectUriStorageKey } from \"../constants/localStorageKeys\";\r\nimport { RootRoute, DeployedProjectRootRoute } from \"../constants/routePaths\";\r\n\r\nexport interface IAccessToken {\r\n  readonly accessToken: string;\r\n  readonly expiresAt: number;\r\n}\r\n\r\nexport interface IWebAuth {\r\n  readonly login: () => void;\r\n  readonly logout: () => void;\r\n  readonly silentLogin: () => void;\r\n  readonly handleAuthentication: (onSuccessLogin: (accessToken: IAccessToken, redirectUri: string) => void, onFailedLogin: () => void) => void;\r\n  readonly isAuthenticated: (expiresIn: number) => boolean;\r\n}\r\n\r\nexport class WebAuth implements IWebAuth {\r\n  private webAuth = new auth0.WebAuth(authOptions);\r\n\r\n  login = (): void => {\r\n    this.webAuth.authorize();\r\n  };\r\n\r\n  silentLogin = (): void => {\r\n    localStorage.setItem(Auth0RedirectUriStorageKey, window.location.pathname);\r\n    this.webAuth.authorize({\r\n      prompt: 'none',\r\n    });\r\n  };\r\n\r\n  logout = (): void => {\r\n    this.webAuth.logout(logoutOptions);\r\n  };\r\n\r\n  private getRedirectUri = () => {\r\n    const redirectUriFromStorage = localStorage.getItem(Auth0RedirectUriStorageKey);\r\n    localStorage.removeItem(Auth0RedirectUriStorageKey);\r\n    const redirectUri = redirectUriFromStorage ? redirectUriFromStorage : RootRoute;\r\n\r\n    // todo make nicer\r\n    if (redirectUri.startsWith(DeployedProjectRootRoute)) {\r\n      return redirectUri.slice(DeployedProjectRootRoute.length + 1);\r\n    }\r\n\r\n    return redirectUri;\r\n  };\r\n\r\n  handleAuthentication = (onSuccessLogin: (accessToken: IAccessToken, redirectUri: string) => void, onFailedLogin: () => void): void => {\r\n    this.webAuth.parseHash((err, authResult) => {\r\n      if (authResult && authResult.accessToken && authResult.idToken) {\r\n        const accessToken: IAccessToken = {\r\n          accessToken: authResult.accessToken as string,\r\n          expiresAt: ((authResult.expiresIn || 0) * 1000) + new Date().getTime(),\r\n        };\r\n        const redirectUri = this.getRedirectUri();\r\n        onSuccessLogin(accessToken, redirectUri);\r\n      }\r\n      else if (err) {\r\n        onFailedLogin();\r\n        this.login();\r\n      }\r\n    });\r\n  };\r\n\r\n  isAuthenticated = (expiresAt: number): boolean => {\r\n    // Check whether the current time is past the access token's expiry time\r\n    return new Date().getTime() < expiresAt;\r\n  };\r\n}\r\n","export const Auth0RedirectUriStorageKey = 'redirectUri';\r\n","import React from 'react';\r\n\r\nexport const Loading = (): JSX.Element => {\r\n    return (\r\n      <div>\r\n        <h1>Loading...</h1>\r\n      </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { IAccessToken, WebAuth } from \"../authentication/WebAuth\";\r\nimport { Redirect, Route, RouteComponentProps, Switch, withRouter } from \"react-router\";\r\nimport { Loading } from \"../components/Loading\";\r\nimport { CallbackRoute, RootRoute } from \"../constants/routePaths\";\r\n\r\ninterface IAuthContextState {\r\n  readonly accessToken: string;\r\n  readonly expiresAt: number;\r\n  readonly isLoggedIn: boolean;\r\n}\r\n\r\nexport interface IAuthContext extends IAuthContextState {\r\n  readonly logout: () => void;\r\n}\r\n\r\nconst defaultAuthContext: IAuthContext = {\r\n  accessToken: '',\r\n  expiresAt: 0,\r\n  isLoggedIn: false,\r\n  logout: () => undefined,\r\n};\r\n\r\nconst context = React.createContext<IAuthContext>(defaultAuthContext);\r\nconst AuthContextProvider = context.Provider;\r\nexport const AuthContextConsumer = context.Consumer;\r\n\r\nclass AuthContext extends React.Component<RouteComponentProps, IAuthContextState> {\r\n\r\n  private webAuth = new WebAuth();\r\n\r\n  constructor(props: RouteComponentProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      accessToken: '',\r\n      isLoggedIn: false,\r\n      expiresAt: 0,\r\n    };\r\n  }\r\n\r\n  private isAuthUrlHash = (hash: string): boolean => /access_token|id_token|error/.test(hash);\r\n\r\n  handleAuthCallback = ({ location }: any) => {\r\n    if (this.isAuthUrlHash(location.hash)) {\r\n      this.webAuth.handleAuthentication(this.onSuccessLogin, this.onFailedLogin);\r\n    }\r\n  };\r\n\r\n  onSuccessLogin = (accessToken: IAccessToken, redirectUri: string) => {\r\n    this.setState({\r\n      accessToken: accessToken.accessToken,\r\n      expiresAt: accessToken.expiresAt,\r\n      isLoggedIn: true,\r\n    });\r\n    this.props.history.push(redirectUri);\r\n  };\r\n\r\n  onFailedLogin = () => {\r\n    console.warn('on failed login');\r\n  };\r\n\r\n  componentDidMount() {\r\n    const {silentLogin} = this.webAuth;\r\n    if (!this.isAuthUrlHash(window.location.hash)) {\r\n      silentLogin();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const context: IAuthContext = {\r\n      ...this.state,\r\n      logout: this.webAuth.logout,\r\n    };\r\n\r\n    const { isLoggedIn } = this.state;\r\n\r\n    return (\r\n      <Switch>\r\n        {isLoggedIn ?\r\n          <Redirect\r\n            from={CallbackRoute}\r\n            to={RootRoute}\r\n          /> :\r\n          <Route\r\n            path={CallbackRoute}\r\n            render={props => {\r\n              this.handleAuthCallback(props);\r\n              return <Loading />;\r\n            }}\r\n          />\r\n        }\r\n\r\n        {isLoggedIn && (\r\n          <Route render={() => (\r\n            <AuthContextProvider value={context}>\r\n              {this.props.children}\r\n            </AuthContextProvider>\r\n          )}/>\r\n        )}\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n\r\nconst AuthContextWithRouter = withRouter(AuthContext);\r\nexport { AuthContextWithRouter as AuthContext };\r\n","export type CustomHeaders = {\r\n  [key: string]: string,\r\n};\r\n\r\nexport type RequestType =\r\n  'GET'\r\n  | 'POST'\r\n  | 'PUT'\r\n  | 'DELETE'\r\n  | 'PATCH';\r\n\r\nexport type ProgressCallback = (event: {\r\n  loaded: number;\r\n  total: number;\r\n}) => void;\r\n\r\nexport interface ICreateAjax {\r\n  request: (type: RequestType, url: string, data: any, customHeaders?: CustomHeaders) => Promise<XMLHttpRequest>;\r\n  requestFile: (type: RequestType, url: string, data: any, customHeaders?: CustomHeaders) => Promise<XMLHttpRequest>;\r\n  upload: (url: string, formData: FormData, uploadProgressCallback: ProgressCallback, customHeaders?: CustomHeaders) => Promise<XMLHttpRequest>;\r\n}\r\n\r\nfunction createAjax(withCredentials: any): ICreateAjax {\r\n  return {\r\n    /**\r\n     * Attempts to parse the response as JSON otherwise returns it untouched.\r\n     *\r\n     * @param {string} type The HTTP verb to be used.\r\n     * @param {string} url The url for the XHR request.\r\n     * @param {object} data Optional. The data to be passed with a POST or PUT request.\r\n     * @param {object} customHeaders Optional. Custom headers to be included in a request.\r\n     *\r\n     * @memberof ajax\r\n     */\r\n    request(type: RequestType, url: string, data: any, customHeaders?: CustomHeaders): Promise<XMLHttpRequest> {\r\n      return new Promise<XMLHttpRequest>(resolve => {\r\n        const request = getNewEmptyRequest();\r\n\r\n        request.open(type, url, true);\r\n        request.withCredentials = withCredentials;\r\n\r\n        addCustomHeaders(request, customHeaders);\r\n\r\n        request.onreadystatechange = () => {\r\n          if (request.readyState === 4) {\r\n            resolve(request);\r\n          }\r\n        };\r\n\r\n        request.send(data);\r\n      });\r\n    },\r\n\r\n    requestFile(type: RequestType, url: string, data: any, customHeaders?: CustomHeaders): Promise<XMLHttpRequest> {\r\n      return new Promise<XMLHttpRequest>(resolve => {\r\n        const request = getNewEmptyRequest();\r\n\r\n        request.open(type, url, true);\r\n        request.responseType = 'blob';\r\n        request.withCredentials = withCredentials;\r\n\r\n        addCustomHeaders(request, customHeaders);\r\n\r\n        request.onreadystatechange = () => {\r\n          if (request.readyState === 4) {\r\n            resolve(request);\r\n          }\r\n        };\r\n\r\n        request.send(data);\r\n      });\r\n    },\r\n\r\n    upload(url: string, formData: FormData, uploadProgressCallback: ProgressCallback, customHeaders?: CustomHeaders): Promise<XMLHttpRequest> {\r\n      return new Promise(resolve => {\r\n        const request = getNewEmptyRequest();\r\n\r\n        request.open('POST', url, true);\r\n\r\n        addCustomHeaders(request, customHeaders);\r\n\r\n        request.onreadystatechange = () => {\r\n          if (request.readyState === 4) {\r\n            resolve(request);\r\n          }\r\n        };\r\n\r\n        request.upload.addEventListener('progress', uploadProgressCallback);\r\n        request.send(formData);\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\nfunction addCustomHeaders(request: XMLHttpRequest, customHeaders?: CustomHeaders) {\r\n  if (customHeaders) {\r\n    Object.keys(customHeaders).forEach((header) => {\r\n      const value = customHeaders[header];\r\n      if (header && value) {\r\n        request.setRequestHeader(header, value);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction getNewEmptyRequest(): XMLHttpRequest {\r\n  // if (XMLHttpRequest) {\r\n  return new XMLHttpRequest();\r\n  // }\r\n  // else {\r\n  //   // Set ajax to correct XHR type. Source: https://gist.github.com/jed/993585\r\n  //   return new XMLHttpRequest();\r\n  //   //return new ActiveXObject('MSXML2.XMLHTTP.3.0');\r\n  // }\r\n}\r\n\r\nexport function createAjaxWithCredentials(): ICreateAjax {\r\n  return createAjax(true);\r\n}\r\n\r\n// export function createAjaxWithoutCredentials(): ICreateAjax {\r\n//   return createAjax(false);\r\n// }\r\n","import { RequestType } from './ajax';\r\n\r\nexport interface IRequestContext {\r\n  readonly appInstanceId?: string;\r\n  readonly authToken?: string;\r\n}\r\n\r\nexport type CustomHeaders = {\r\n  [key: string]: string,\r\n};\r\n\r\n\r\nfunction getAuthHeader(accessToken: string): CustomHeaders {\r\n  return { Authorization: `Bearer ${accessToken}` };\r\n}\r\n\r\nfunction getHeaders(defaultHeaders: CustomHeaders, requestContext?: IRequestContext): CustomHeaders {\r\n  if (!requestContext) {\r\n    return defaultHeaders;\r\n  }\r\n\r\n  const newHeaders = requestContext.authToken ? getAuthHeader(requestContext.authToken) : {};\r\n\r\n  if (requestContext.appInstanceId) {\r\n    newHeaders['X-AppInstanceId'] = requestContext.appInstanceId;\r\n  }\r\n\r\n  return { ...defaultHeaders, ...newHeaders };\r\n}\r\n\r\nexport function createRestProvider(ajax: any) {\r\n  function makeRequest(httpVerb: RequestType, url: string, data: any, requestContext?: IRequestContext): Promise<XMLHttpRequest> {\r\n    const headers = getHeaders(\r\n      { 'Content-type': 'application/json' },\r\n      requestContext,\r\n    );\r\n\r\n    const requestBody = data ? prepareDataForSend(data) : null;\r\n    return ajax.request(httpVerb, url, requestBody, headers);\r\n  }\r\n\r\n  return {\r\n    post(url: string, data: any, requestContext?: IRequestContext): Promise<any> {\r\n      return makeRequest('POST', url, data, requestContext)\r\n        .then(verifyStatusCode([200, 201]))\r\n        .then(parseResponse);\r\n    },\r\n  };\r\n}\r\n\r\nfunction prepareDataForSend(data: any): any {\r\n  if (data && typeof data === 'object') {\r\n    // const dto = toDTO(data);\r\n    // return JSON.stringify(dto);\r\n  }\r\n  else if (typeof data === 'string') {\r\n    return JSON.stringify(data);\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\nfunction verifyStatusCode(validStatusCodes: number[]) {\r\n  return (response: XMLHttpRequest) => {\r\n    if (validStatusCodes.indexOf(response.status) >= 0) {\r\n      return response;\r\n    }\r\n    else {\r\n      throw response;\r\n    }\r\n  };\r\n}\r\n\r\nfunction parseResponse(response: XMLHttpRequest) {\r\n  // it might be empty string which can't be parsed by JSON.parse\r\n  if (!response.responseText) {\r\n    return null;\r\n  }\r\n  return JSON.parse(response.responseText);\r\n}\r\n","import { createAjaxWithCredentials } from '../utils/ajax';\r\nimport {\r\n  createRestProvider,\r\n  IRequestContext,\r\n} from '../utils/restProvider';\r\n\r\nconst restProvider = createRestProvider(createAjaxWithCredentials());\r\n\r\nexport interface IPreviewApiKey {\r\n  readonly api_key: string;\r\n  readonly expiresAt: string;\r\n}\r\n\r\nexport const getPreviewApiKey = (authToken: string, projectId: string): Promise<IPreviewApiKey> => {\r\n  const requestContext: IRequestContext = {\r\n    authToken: authToken,\r\n  };\r\n  const url = `${process.env.REACT_APP_KENTICO_CLOUD_URL}/api/project-management/${projectId}/keys/preview-delivery-api-primary`;\r\n  return restProvider.post(url, null, requestContext);\r\n};\r\n","import { IAppContext } from \"../context/AppContext\";\r\nimport { IAuthContext } from \"../context/AuthContext\";\r\nimport { IPreviewApiKey } from \"../repositories/previewApiKeyRepository\";\r\n\r\ninterface ILoadPreviewApiKeyDeps {\r\n  readonly appContext: IAppContext;\r\n  readonly authContext: IAuthContext;\r\n  readonly getPreviewApiKey: (authToken: string, projectId: string) => Promise<IPreviewApiKey>;\r\n}\r\n\r\nexport const createLoadPreviewApiKey = (props: ILoadPreviewApiKeyDeps): () => Promise<string | null> => {\r\n  const { accessToken } = props.authContext;\r\n  const { projectId } = props.appContext;\r\n  return () => props.getPreviewApiKey(accessToken, projectId)\r\n    .then((response: IPreviewApiKey) => {\r\n      return response.api_key;\r\n    })\r\n    .catch(() => {\r\n      return null;\r\n    })\r\n};\r\n","import { matchPath } from \"react-router\";\r\nimport { DeployedProjectRootRoute, ProjectRoute, ProjectRouteParams } from \"../constants/routePaths\";\r\n\r\nexport const getProjectIdFromUrl = (): string | null => {\r\n  if (window.location) {\r\n    const routeToMatch = DeployedProjectRootRoute + ProjectRoute + \"*\";\r\n    const match = matchPath<ProjectRouteParams>(window.location.pathname, routeToMatch);\r\n    if (match) {\r\n      return match.params.projectId;\r\n    }\r\n  }\r\n\r\n  console.warn('no projectId in url');\r\n  return null;\r\n};\r\n","import React from 'react';\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { AuthContextConsumer, IAuthContext } from \"./AuthContext\";\r\nimport { AppContextConsumer, IAppContext } from \"./AppContext\";\r\nimport { Loading } from \"../components/Loading\";\r\nimport { ErrorPage, ErrorPageType } from \"../components/ErrorPage\";\r\nimport { getPreviewApiKey } from \"../repositories/previewApiKeyRepository\";\r\nimport { LoadingStatus } from \"../enums/LoadingStatus\";\r\nimport { createLoadApplicationData } from \"../factories/createLoadApplicationData\";\r\nimport { createLoadPreviewApiKey } from \"../factories/createLoadPreviewApiKey\";\r\nimport { getProjectIdFromUrl } from \"../utils/projectIdUtil\";\r\n\r\ninterface IAppContextInitializationProps extends RouteComponentProps {\r\n  readonly authContext: IAuthContext;\r\n  readonly appContext: IAppContext;\r\n  readonly loadApplicationData: () => void;\r\n}\r\n\r\nclass AppContextInitialization extends React.PureComponent<IAppContextInitializationProps, {}> {\r\n\r\n  componentDidUpdate(): void {\r\n    this.props.loadApplicationData();\r\n  }\r\n\r\n  render() {\r\n    const { projectIdLoadingStatus, previewApiKeyLoadingStatus, dataLoadingStatus } = this.props.appContext;\r\n    if (projectIdLoadingStatus === LoadingStatus.Failed) {\r\n      return <ErrorPage type={ErrorPageType.MissingProjectId}/>\r\n    }\r\n\r\n    if (previewApiKeyLoadingStatus === LoadingStatus.Failed) {\r\n      return <ErrorPage type={ErrorPageType.UnableToGetPreviewApiKey}/>\r\n    }\r\n\r\n    if (dataLoadingStatus === LoadingStatus.Finished) {\r\n      return this.props.children;\r\n    }\r\n\r\n    return <Loading/>\r\n  }\r\n}\r\n\r\nconst AppContextInitializationConnected = (props: RouteComponentProps) => (\r\n  <AppContextConsumer>\r\n    {appContext => (\r\n      <AuthContextConsumer>\r\n        {authContext => {\r\n          const loadApplicationData = createLoadApplicationData({\r\n            appContext,\r\n            getProjectIdFromUrl,\r\n            loadPreviewApikey: createLoadPreviewApiKey({\r\n              authContext,\r\n              appContext,\r\n              getPreviewApiKey,\r\n            })\r\n          });\r\n\r\n          return (\r\n            <AppContextInitialization\r\n              loadApplicationData={loadApplicationData}\r\n              authContext={authContext}\r\n              appContext={appContext}\r\n              {...props}\r\n          />);\r\n        }}\r\n      </AuthContextConsumer>\r\n    )}\r\n  </AppContextConsumer>\r\n);\r\n\r\nconst AppContextInitializationWithRouter = withRouter<RouteComponentProps>(AppContextInitializationConnected);\r\nexport { AppContextInitializationWithRouter as AppContextInitialization };\r\n","import { IAppContext } from \"../context/AppContext\";\r\nimport { LoadingStatus } from \"../enums/LoadingStatus\";\r\n\r\ninterface ILoadApplicationDataDeps {\r\n  readonly appContext: IAppContext;\r\n  readonly loadPreviewApikey: () => Promise<string | null>;\r\n  readonly getProjectIdFromUrl: () => string | null;\r\n}\r\n\r\nexport const createLoadApplicationData = (deps: ILoadApplicationDataDeps) => async (): Promise<void> => {\r\n  const { appContext, loadPreviewApikey, getProjectIdFromUrl } = deps;\r\n\r\n  if (appContext.dataLoadingStatus === LoadingStatus.Finished) {\r\n    return;\r\n  }\r\n\r\n  if (appContext.projectIdLoadingStatus === LoadingStatus.NotLoaded) {\r\n    const projectIdFromUrl = getProjectIdFromUrl();\r\n    if (projectIdFromUrl) {\r\n      appContext.setProjectId(projectIdFromUrl);\r\n      appContext.setProjectIdLoadingStatus(LoadingStatus.Finished);\r\n    } else {\r\n      appContext.setProjectIdLoadingStatus(LoadingStatus.Failed);\r\n    }\r\n  }\r\n\r\n  if (appContext.projectIdLoadingStatus === LoadingStatus.Finished && appContext.previewApiKeyLoadingStatus === LoadingStatus.NotLoaded) {\r\n    appContext.setPreviewApiKeyLoadingStatus(LoadingStatus.InProgress);\r\n    const previewApiKey = await loadPreviewApikey();\r\n    if (previewApiKey) {\r\n      appContext.setPreviewApiKey(previewApiKey);\r\n      appContext.setPreviewApiKeyLoadingStatus(LoadingStatus.Finished);\r\n    }\r\n    else {\r\n      appContext.setPreviewApiKeyLoadingStatus(LoadingStatus.Failed);\r\n    }\r\n  }\r\n\r\n  const requiredDataLoaded = [\r\n    appContext.previewApiKeyLoadingStatus,\r\n    appContext.projectIdLoadingStatus,\r\n  ].every(status => status === LoadingStatus.Finished);\r\n\r\n  if (requiredDataLoaded) {\r\n    appContext.setLoadingStatus(LoadingStatus.Finished);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './App';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { AppContextComponent } from './context/AppContext';\r\nimport { AuthContext } from './context/AuthContext';\r\nimport { AppContextInitialization } from './context/AppContextInitialization';\r\nimport { DeployedProjectRootRoute } from './constants/routePaths';\r\n\r\nReactDOM.render(\r\n  <Router basename={DeployedProjectRootRoute}>\r\n    <AuthContext>\r\n      <AppContextComponent>\r\n        <AppContextInitialization>\r\n          <App/>\r\n        </AppContextInitialization>\r\n      </AppContextComponent>\r\n    </AuthContext>\r\n  </Router>\r\n  , document.getElementById('root'));\r\n"],"sourceRoot":""}