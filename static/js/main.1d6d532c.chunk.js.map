{"version":3,"sources":["constants/routePaths.ts","utils/routeTransitionUtils.ts","enums/LoadingStatus.ts","components/ErrorPage.tsx","models/Article.ts","models/LandingPage.ts","models/Product.ts","repositories/contentItemRepository.ts","context/AppContext.tsx","components/NavigationBar.tsx","components/PageContent.tsx","components/Product/ProductDetailsPage.tsx","constants/resources.ts","components/Product/ProductCard.tsx","components/Product/ProductsPage.tsx","components/WelcomePage.tsx","App.tsx","authentication/authOptions.ts","authentication/WebAuth.ts","constants/localStorageKeys.ts","components/Loading.tsx","context/AuthContext.tsx","utils/ajax.ts","utils/restProvider.ts","repositories/previewApiKeyRepository.ts","factories/createLoadPreviewApiKey.ts","utils/projectIdUtil.ts","context/AppContextInitialization.tsx","factories/createLoadApplicationData.ts","index.tsx"],"names":["DeployedProjectRootRoute","concat","process","CallbackRoute","ProjectRoute","ProductsRoute","ProductDetailsRoute","buildPath","route","params","compile","LoadingStatus","ErrorPageType","ArticleExampleContentType","_ContentItem","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","body","title","url","inherits","ContentItem","LandingPageExampleContentType","propertyResolver","fieldName","productList","ProductExampleContentType","description","name","image","taxonomyCategorizingTargetAudience","deliveryClient","ensureDeliveryClient","projectId","previewApiKey","DeliveryClient","enablePreviewMode","enableAdvancedLogging","basePreviewUrl","typeResolvers","TypeResolver","getAllArticles","Error","items","type","toPromise","then","response","catch","reason","console","log","getProductsPage","defaultAppContext","dataLoadingStatus","NotLoaded","previewApiKeyLoadingStatus","projectIdLoadingStatus","articles","products","loadWelcomePage","loadProducts","setProjectId","setLoadingStatus","setProjectIdLoadingStatus","setPreviewApiKey","setPreviewApiKeyLoadingStatus","context","React","createContext","AppContextProvider","Provider","AppContextConsumer","Consumer","AppContext","_React$PureComponent","state","_dataPollingInterval","_startDataPolling","callback","clearInterval","setInterval","setState","loadingStatus","_loadWelcomePageData","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","sent","stop","_callee2","_context2","_loadProductsData","_callee3","productsPage","_context3","_callee4","_context4","createClass","key","value","_this$state","contextValue","react_default","createElement","props","children","PureComponent","NavigationBar","appContext","className","react_router_dom","activeClassName","exact","to","PageContent","_ref","Fragment","ProductDetailsPage","init","product","pictureUrl","assets","PageContent_PageContent","alt","src","dangerouslySetInnerHTML","__html","getHtml","ProductDetailsPageConnected","match","ProductDetailsPage_ProductDetailsPage","filter","productId","productImagePlaceholderUrl","ProductCardPlaceholder","imageSource","ProductCard","_ref2","ProductCard_ProductCardPlaceholder","ProductsPage","_this$props","isSingleProduct","classNames","products-page--has-single-product","map","ProductCard_ProductCard","system","id","ProductsPageConnected","ProductsPage_ProductsPage","WelcomePage","article","WelcomePageConnected","WelcomePage_WelcomePage","App","react_router","path","component","render","authOptions","domain","clientID","audience","redirectUri","responseType","scope","logoutOptions","returnTo","WebAuth","webAuth","auth0","login","authorize","silentLogin","localStorage","setItem","window","location","pathname","prompt","logout","getRedirectUri","redirectUriFromStorage","getItem","removeItem","startsWith","slice","handleAuthentication","onSuccessLogin","onFailedLogin","parseHash","err","authResult","accessToken","idToken","expiresAt","expiresIn","Date","getTime","isAuthenticated","Loading","defaultAuthContext","isLoggedIn","AuthContextProvider","AuthContextConsumer","AuthContext","isAuthUrlHash","hash","test","handleAuthCallback","history","push","warn","_this2","objectSpread","from","Loading_Loading","Component","AuthContextWithRouter","withRouter","projectIdUrlTemplate","MissingProjectIdErrorPageContent","UnableToGetPreviewApiKeyErrorPageContent","ErrorPage","MissingProjectId","ErrorPage_MissingProjectIdErrorPageContent","UnableToGetPreviewApiKey","ErrorPage_UnableToGetPreviewApiKeyErrorPageContent","addCustomHeaders","request","customHeaders","keys","forEach","header","setRequestHeader","getNewEmptyRequest","XMLHttpRequest","parseResponse","responseText","JSON","parse","restProvider","ajax","makeRequest","httpVerb","data","requestContext","headers","defaultHeaders","newHeaders","authToken","Authorization","appInstanceId","getHeaders","Content-type","requestBody","stringify","prepareDataForSend","post","validStatusCodes","indexOf","status","createRestProvider","withCredentials","Promise","resolve","open","onreadystatechange","readyState","send","requestFile","upload","formData","uploadProgressCallback","addEventListener","createAjaxWithCredentials","getPreviewApiKey","createLoadPreviewApiKey","authContext","api_key","getProjectIdFromUrl","routeToMatch","matchPath","AppContextInitialization","loadApplicationData","_this$props$appContex","Failed","ErrorPage_ErrorPage","Finished","AppContextInitializationWithRouter","deps","loadPreviewApikey","projectIdFromUrl","abrupt","InProgress","every","AppContextInitialization_AppContextInitialization","assign","ReactDOM","basename","AppContext_AppContext","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.1d6d532c.chunk.js","sourcesContent":["const uuidPattern = '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}';\r\n\r\nexport const DeployedProjectRootRoute = `${process.env.REACT_APP_PROJECT_ROUTE}`;\r\n\r\nexport const RootRoute = '/';\r\nexport const CallbackRoute = `${RootRoute}callback`;\r\n\r\nexport const ProjectRoute = `${RootRoute}:projectId(${uuidPattern})`;\r\nexport const ProductsRoute = `${ProjectRoute}/products`;\r\nexport const ProductDetailsRoute = `${ProductsRoute}/:productId`;\r\n\r\nexport type ProjectRouteParams = {\r\n  readonly projectId: string;\r\n};\r\n\r\nexport type ProductDetailsRouteParams = ProjectRouteParams & {\r\n  readonly productId: string;\r\n}\r\n","import { compile } from \"path-to-regexp\";\r\n\r\ninterface IDictionary<T> {\r\n  readonly [key: string]: T | undefined;\r\n}\r\n\r\nexport function buildPath<TRouteParams = IDictionary<string>>(route: string, params: TRouteParams): string {\r\n  return compile(route)(params as any as object);\r\n}\r\n","export enum LoadingStatus {\r\n  NotLoaded = 'notLoaded',\r\n  InProgress = 'inProgress',\r\n  Finished = 'finished',\r\n  Failed = 'failed',\r\n}\r\n","import React from 'react';\r\n\r\nexport enum ErrorPageType {\r\n  MissingProjectId = 'missingProjectId',\r\n  UnableToGetPreviewApiKey = 'unableToGetPreviewApiKey',\r\n}\r\n\r\ninterface IErrorPageProps {\r\n  readonly type: ErrorPageType;\r\n}\r\n\r\nconst projectIdUrlTemplate = \"https://kentico.github.io/kontent-sample-app-preview-react/<your_project_id>\";\r\n\r\nconst MissingProjectIdErrorPageContent: React.FunctionComponent = () => (\r\n  <p>Didn't you forget to provide Project Id in the url? E.g. <i>{projectIdUrlTemplate}</i></p>\r\n);\r\n\r\nconst UnableToGetPreviewApiKeyErrorPageContent: React.FunctionComponent = () => (\r\n  <>\r\n    <p>There was problem retrieving Preview Api Key.</p>\r\n    <p>Did you provide correct Project Id? E.g. <i>{projectIdUrlTemplate}</i></p>\r\n  </>\r\n);\r\n\r\nexport const ErrorPage: React.FunctionComponent<IErrorPageProps> = ({ type }) => (\r\n  <>\r\n    <div className=\"navigation-bar\">\r\n      <nav className=\"navigation-bar__app-menu\"/>\r\n    </div>\r\n\r\n    <p>Ooops, there was some error!</p>\r\n    {type === ErrorPageType.MissingProjectId && (\r\n      <MissingProjectIdErrorPageContent/>\r\n    )}\r\n\r\n    {type === ErrorPageType.UnableToGetPreviewApiKey && (\r\n      <UnableToGetPreviewApiKeyErrorPageContent/>\r\n    )}\r\n  </>\r\n);\r\n\r\n","\r\nimport { ContentItem, Fields } from 'kentico-cloud-delivery';\r\n\r\n/**\r\n * This class was generated by 'kentico-cloud-model-generator-utility' at Thu Jun 06 2019 14:16:39 GMT+0200 (GMT+02:00).\r\n *\r\n * Note: You can substitute 'ContentItem' type with another generated class. Generator doesn't have this information available\r\n * and so its up to you to define relationship between models.\r\n */\r\nexport class ArticleExampleContentType extends ContentItem {\r\n    public body!: Fields.RichTextField;\r\n    public title!: Fields.TextField;\r\n    public url!: Fields.UrlSlugField;\r\n}\r\n","\r\nimport { ContentItem, Fields } from 'kentico-cloud-delivery';\r\nimport { ProductExampleContentType } from \"./Product\";\r\n\r\n/**\r\n * This class was generated by 'kentico-cloud-model-generator-utility' at Thu Jun 06 2019 14:16:39 GMT+0200 (GMT+02:00).\r\n *\r\n * Note: You can substitute 'ContentItem' type with another generated class. Generator doesn't have this information available\r\n * and so its up to you to define relationship between models.\r\n */\r\nexport class LandingPageExampleContentType extends ContentItem {\r\n    public productList!: ProductExampleContentType[];\r\n    public title!: Fields.TextField;\r\n    public url!: Fields.UrlSlugField;\r\n    constructor() {\r\n        super({\r\n            propertyResolver: ((fieldName: string) => {\r\n                if (fieldName === 'product_list') {\r\n                    return 'productList';\r\n                }\r\n                return fieldName;\r\n            })\r\n        });\r\n    }\r\n}\r\n","\r\nimport { ContentItem, Fields } from 'kentico-cloud-delivery';\r\n\r\n/**\r\n * This class was generated by 'kentico-cloud-model-generator-utility' at Thu Jun 06 2019 14:16:39 GMT+0200 (GMT+02:00).\r\n *\r\n * Note: You can substitute 'ContentItem' type with another generated class. Generator doesn't have this information available\r\n * and so its up to you to define relationship between models.\r\n */\r\nexport class ProductExampleContentType extends ContentItem {\r\n    public description!: Fields.RichTextField;\r\n    public name!: Fields.TextField;\r\n    public image!: Fields.AssetsField;\r\n    public taxonomyCategorizingTargetAudience!: Fields.TaxonomyField;\r\n    public url!: Fields.UrlSlugField;\r\n    constructor() {\r\n        super({\r\n            propertyResolver: ((fieldName: string) => {\r\n                if (fieldName === 'taxonomy___categorizing_target_audience') {\r\n                    return 'taxonomyCategorizingTargetAudience';\r\n                }\r\n                return fieldName;\r\n            })\r\n        });\r\n    }\r\n}\r\n","import { ArticleExampleContentType } from \"../models/Article\";\r\nimport { DeliveryClient, IDeliveryClient, TypeResolver } from \"kentico-cloud-delivery\";\r\nimport { LandingPageExampleContentType } from \"../models/LandingPage\";\r\nimport { ProductExampleContentType } from \"../models/Product\";\r\n\r\nlet deliveryClient: IDeliveryClient | null = null;\r\n\r\nconst ensureDeliveryClient = (projectId: string, previewApiKey: string): void => {\r\n  if (deliveryClient) {\r\n    return;\r\n  }\r\n\r\n  deliveryClient = new DeliveryClient({\r\n    enablePreviewMode: true,\r\n    enableAdvancedLogging: true,\r\n    previewApiKey,\r\n    projectId: projectId,\r\n    basePreviewUrl: process.env.REACT_APP_DELIVER_URL,\r\n    typeResolvers: [\r\n      new TypeResolver('article_example_content_type', () => new ArticleExampleContentType()),\r\n      new TypeResolver('landing_page_example_content_type', () => new LandingPageExampleContentType()),\r\n      new TypeResolver('product_example_content_type', () => new ProductExampleContentType()),\r\n    ],\r\n  });\r\n};\r\n\r\n\r\nexport const getAllArticles = (projectId: string, previewApiKey: string): Promise<Array<ArticleExampleContentType>> => {\r\n  ensureDeliveryClient(projectId, previewApiKey);\r\n  if (!deliveryClient) {\r\n    throw new Error('Delivery client is not initialized yet');\r\n  }\r\n\r\n  return deliveryClient.items<ArticleExampleContentType>()\r\n    .type('article_example_content_type')\r\n    .toPromise()\r\n    .then(response => {\r\n      return response.items;\r\n    })\r\n    .catch(reason => {\r\n      console.log(reason);\r\n      return new Array<ArticleExampleContentType>();\r\n    });\r\n};\r\n\r\nexport const getProductsPage = (projectId: string, previewApiKey: string): Promise<Array<LandingPageExampleContentType>> => {\r\n  ensureDeliveryClient(projectId, previewApiKey);\r\n  if (!deliveryClient) {\r\n    throw new Error('Delivery client is not initialized yet');\r\n  }\r\n\r\n  return deliveryClient.items<LandingPageExampleContentType>()\r\n    .type('landing_page_example_content_type')\r\n    .toPromise()\r\n    .then(response => {\r\n      return response.items;\r\n    })\r\n    .catch(reason => {\r\n      console.log(reason);\r\n      return new Array<LandingPageExampleContentType>();\r\n    });\r\n};\r\n","import React from 'react';\r\nimport { LoadingStatus } from \"../enums/LoadingStatus\";\r\nimport { getAllArticles, getProductsPage } from \"../repositories/contentItemRepository\";\r\nimport { ArticleExampleContentType } from \"../models/Article\";\r\nimport { ProductExampleContentType } from \"../models/Product\";\r\nimport { clearInterval, setInterval } from \"timers\";\r\n\r\ninterface IAppContextState {\r\n  readonly dataLoadingStatus: LoadingStatus;\r\n  readonly previewApiKey: string;\r\n  readonly previewApiKeyLoadingStatus: LoadingStatus;\r\n  readonly projectId: string;\r\n  readonly projectIdLoadingStatus: LoadingStatus;\r\n  readonly articles: Array<ArticleExampleContentType>;\r\n  readonly products: Array<ProductExampleContentType>;\r\n}\r\n\r\ninterface IAppContextProps {\r\n  readonly loadWelcomePage: () => void;\r\n  readonly loadProducts: () => void;\r\n  readonly setProjectId: (projectId: string) => void;\r\n  readonly setLoadingStatus: (loadingStatus: LoadingStatus) => void;\r\n  readonly setProjectIdLoadingStatus: (projectIdLoadingStatus: LoadingStatus) => void;\r\n  readonly setPreviewApiKey: (previewApiKey: string) => void;\r\n  readonly setPreviewApiKeyLoadingStatus: (previewApiKeyLoadingStatus: LoadingStatus) => void;\r\n}\r\n\r\nexport interface IAppContext extends IAppContextState, IAppContextProps {\r\n}\r\n\r\nconst defaultAppContext: IAppContext = {\r\n  dataLoadingStatus: LoadingStatus.NotLoaded,\r\n  previewApiKey: '',\r\n  previewApiKeyLoadingStatus: LoadingStatus.NotLoaded,\r\n  projectId: '',\r\n  projectIdLoadingStatus: LoadingStatus.NotLoaded,\r\n  articles: new Array<ArticleExampleContentType>(),\r\n  products: new Array<ProductExampleContentType>(),\r\n  loadWelcomePage: () => undefined,\r\n  loadProducts: () => undefined,\r\n  setProjectId: () => undefined,\r\n  setLoadingStatus: () => undefined,\r\n  setProjectIdLoadingStatus: () => undefined,\r\n  setPreviewApiKey: () => undefined,\r\n  setPreviewApiKeyLoadingStatus: () => undefined,\r\n};\r\n\r\nconst context = React.createContext<IAppContext>(defaultAppContext);\r\nconst AppContextProvider = context.Provider;\r\nexport const AppContextConsumer = context.Consumer;\r\n\r\nexport class AppContext extends React.PureComponent<{}, IAppContextState> {\r\n\r\n  readonly state = {\r\n    dataLoadingStatus: LoadingStatus.NotLoaded,\r\n    previewApiKey: '',\r\n    previewApiKeyLoadingStatus: LoadingStatus.NotLoaded,\r\n    projectId: '',\r\n    projectIdLoadingStatus: LoadingStatus.NotLoaded,\r\n    articles: new Array<ArticleExampleContentType>(),\r\n    products: new Array<ProductExampleContentType>(),\r\n  };\r\n\r\n  private _dataPollingInterval: NodeJS.Timer | null = null;\r\n\r\n  private _startDataPolling = (callback: () => void): void => {\r\n    if (this._dataPollingInterval !== null) {\r\n      clearInterval(this._dataPollingInterval);\r\n    }\r\n\r\n    this._dataPollingInterval = setInterval(callback, 3000);\r\n  };\r\n\r\n  setProjectId = (projectId: string) => {\r\n    this.setState({ projectId });\r\n  };\r\n\r\n  setLoadingStatus = (loadingStatus: LoadingStatus) => {\r\n    this.setState({ dataLoadingStatus: loadingStatus })\r\n  };\r\n\r\n  setProjectIdLoadingStatus = (projectIdLoadingStatus: LoadingStatus) => {\r\n    this.setState({ projectIdLoadingStatus });\r\n  };\r\n\r\n  setPreviewApiKey = (previewApiKey: string) => {\r\n    this.setState({ previewApiKey });\r\n  };\r\n\r\n  setPreviewApiKeyLoadingStatus = (previewApiKeyLoadingStatus: LoadingStatus) => {\r\n    this.setState({ previewApiKeyLoadingStatus });\r\n  };\r\n\r\n  private _loadWelcomePageData = async () => {\r\n    const articles = await getAllArticles(this.state.projectId, this.state.previewApiKey);\r\n    this.setState({ articles });\r\n  };\r\n\r\n  loadWelcomePage = async () => {\r\n    this._startDataPolling(this._loadWelcomePageData);\r\n    await this._loadWelcomePageData();\r\n  };\r\n\r\n  private _loadProductsData = async () => {\r\n    const productsPage = await getProductsPage(this.state.projectId, this.state.previewApiKey);\r\n    if (productsPage && productsPage[0]) {\r\n      this.setState({ products: productsPage[0].productList });\r\n    }\r\n  };\r\n\r\n  loadProducts = async () => {\r\n    this._startDataPolling(this._loadProductsData);\r\n    await this._loadProductsData();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      products,\r\n      articles,\r\n      projectId,\r\n      dataLoadingStatus,\r\n      projectIdLoadingStatus,\r\n      previewApiKey,\r\n      previewApiKeyLoadingStatus,\r\n    } = this.state;\r\n\r\n    const contextValue: IAppContext = {\r\n      dataLoadingStatus,\r\n      previewApiKey,\r\n      previewApiKeyLoadingStatus,\r\n      projectId,\r\n      projectIdLoadingStatus,\r\n      articles,\r\n      products,\r\n      loadWelcomePage: this.loadWelcomePage,\r\n      loadProducts: this.loadProducts,\r\n      setProjectId: this.setProjectId,\r\n      setLoadingStatus: this.setLoadingStatus,\r\n      setProjectIdLoadingStatus: this.setProjectIdLoadingStatus,\r\n      setPreviewApiKey: this.setPreviewApiKey,\r\n      setPreviewApiKeyLoadingStatus: this.setPreviewApiKeyLoadingStatus,\r\n    };\r\n\r\n    return (\r\n      <AppContextProvider value={contextValue}>\r\n        {this.props.children}\r\n      </AppContextProvider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './NavigationBar.css';\r\nimport {\r\n  ProductsRoute,\r\n  ProjectRoute,\r\n  ProjectRouteParams,\r\n} from '../constants/routePaths';\r\nimport { buildPath } from \"../utils/routeTransitionUtils\";\r\nimport { AppContextConsumer } from \"../context/AppContext\";\r\n\r\nexport class NavigationBar extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <AppContextConsumer>\r\n        {appContext => (\r\n          <div className=\"navigation-bar\">\r\n            <nav className=\"navigation-bar__app-menu\">\r\n              <NavLink\r\n                activeClassName=\"navigation-bar__app-menu-button--active\"\r\n                className=\"navigation-bar__app-menu-button\"\r\n                exact={true}\r\n                to={buildPath<ProjectRouteParams>(ProjectRoute, { projectId: appContext.projectId })}\r\n              >\r\n                Welcome\r\n              </NavLink>\r\n\r\n              <NavLink\r\n                activeClassName=\"navigation-bar__app-menu-button--active\"\r\n                className=\"navigation-bar__app-menu-button\"\r\n                to={buildPath<ProjectRouteParams>(ProductsRoute, { projectId: appContext.projectId })}\r\n              >\r\n                Products\r\n              </NavLink>\r\n            </nav>\r\n          </div>\r\n        )}\r\n      </AppContextConsumer>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport './PageContent.css';\r\n\r\nexport interface IPageContentProps {\r\n  readonly title: string;\r\n}\r\n\r\nexport const PageContent: React.FunctionComponent<IPageContentProps> = ({ title, children }) => (\r\n  <>\r\n    <div className=\"app-title\">\r\n      {title}\r\n    </div>\r\n    <div className=\"app-content\">\r\n      {children}\r\n    </div>\r\n  </>\r\n);\r\n","import React from 'react';\r\nimport {\r\n  AppContextConsumer,\r\n} from '../../context/AppContext';\r\nimport './ProductDetailsPage.css';\r\nimport { ProductDetailsRouteParams } from \"../../constants/routePaths\";\r\nimport { ProductExampleContentType } from \"../../models/Product\";\r\nimport { PageContent } from \"../PageContent\";\r\n\r\ninterface IProductDetailsPage {\r\n  readonly product: ProductExampleContentType;\r\n  readonly init: () => void;\r\n}\r\n\r\nclass ProductDetailsPage extends React.PureComponent<IProductDetailsPage> {\r\n  componentDidMount(): void {\r\n    this.props.init();\r\n  }\r\n\r\n  render() {\r\n    const { product } = this.props;\r\n    if (product) {\r\n      const pictureUrl = product.image.assets[0] ? product.image.assets[0].url : '';\r\n      return (\r\n        <PageContent title={product.name.value}>\r\n          {pictureUrl && (\r\n            <img\r\n              className=\"product-details__image\"\r\n              alt={product.name.value}\r\n              src={product.image.assets[0] ? product.image.assets[0].url : ''}\r\n            />\r\n          )}\r\n\r\n          <div\r\n            className=\"product-details__description\"\r\n            dangerouslySetInnerHTML={{ __html: product.description.getHtml() }}\r\n          />\r\n        </PageContent>);\r\n    }\r\n\r\n    return <p>There's no such product</p>;\r\n  }\r\n}\r\n\r\ninterface IProductDetailsPageConnectedProps {\r\n  readonly match: {\r\n    readonly params: ProductDetailsRouteParams;\r\n  };\r\n}\r\n\r\nconst ProductDetailsPageConnected: React.FunctionComponent<IProductDetailsPageConnectedProps> = ({ match }) => (\r\n  <AppContextConsumer>\r\n    {appContext => (\r\n      <ProductDetailsPage\r\n        product={appContext.products.filter(product => product.url.value === match.params.productId)[0]}\r\n        init={appContext.loadProducts}\r\n      />\r\n    )}\r\n  </AppContextConsumer>\r\n);\r\n\r\nexport { ProductDetailsPageConnected as ProductDetailsPage }\r\n","export const productImagePlaceholderUrl = `${process.env.REACT_APP_PROJECT_DOMAIN}${process.env.REACT_APP_PROJECT_ROUTE}/placeholder-images.png`;\r\n","import { Link } from \"react-router-dom\";\r\nimport { buildPath } from \"../../utils/routeTransitionUtils\";\r\nimport { ProductDetailsRoute, ProductDetailsRouteParams } from \"../../constants/routePaths\";\r\nimport React from \"react\";\r\nimport './ProductCard.css';\r\nimport { productImagePlaceholderUrl } from \"../../constants/resources\";\r\n\r\ninterface IProductCardPlaceholderProps {\r\n  readonly imageSource: string;\r\n  readonly title: string;\r\n}\r\n\r\nconst ProductCardPlaceholder: React.FunctionComponent<IProductCardPlaceholderProps> = ({ imageSource, title }) => (\r\n  <>\r\n    <div className=\"product-card__thumbnail-wrapper\">\r\n      <img\r\n        className=\"product-card__thumbnail\"\r\n        src={imageSource}\r\n        alt=\"product thumbnail\"\r\n      />\r\n    </div>\r\n    {title ? title : 'Untitled content item'}\r\n  </>\r\n);\r\n\r\ninterface IProductCardProps {\r\n  readonly projectId: string;\r\n  readonly productId: string;\r\n  readonly title: string;\r\n  readonly pictureUrl: string;\r\n}\r\n\r\nexport const ProductCard: React.FunctionComponent<IProductCardProps> =\r\n  ({ projectId, productId, pictureUrl, title }) => {\r\n    const imageSource = pictureUrl ? pictureUrl : productImagePlaceholderUrl;\r\n    return (\r\n      <div className=\"product-card\">\r\n        {productId ? (\r\n            <Link to={buildPath<ProductDetailsRouteParams>(ProductDetailsRoute, { projectId, productId })}>\r\n              <ProductCardPlaceholder imageSource={imageSource} title={title}/>\r\n            </Link>\r\n          ) : (\r\n            <ProductCardPlaceholder imageSource={imageSource} title={title}/>\r\n          )}\r\n      </div>\r\n    );\r\n  };\r\n","import React from 'react';\r\nimport { AppContextConsumer } from '../../context/AppContext';\r\nimport { PageContent } from '../PageContent';\r\nimport './ProductsPage.css';\r\nimport { ProductExampleContentType } from \"../../models/Product\";\r\nimport { ProductCard } from \"./ProductCard\";\r\nimport classNames from \"classnames\";\r\n\r\ninterface IProductsPageProps {\r\n  readonly init: () => void;\r\n  readonly projectId: string;\r\n  readonly products: Array<ProductExampleContentType>;\r\n}\r\n\r\nclass ProductsPage extends React.PureComponent<IProductsPageProps> {\r\n  componentDidMount(): void {\r\n    this.props.init();\r\n  }\r\n\r\n  render() {\r\n    const { projectId, products } = this.props;\r\n    const isSingleProduct = products.length === 1;\r\n    return (\r\n      <PageContent title=\"Products\">\r\n        <div className={classNames(\"products-page\", {\r\n          \"products-page--has-single-product\": isSingleProduct,\r\n        })}>\r\n          {products.map((product: ProductExampleContentType) => (\r\n            <ProductCard\r\n              title={product.name.value}\r\n              pictureUrl={product.image.assets[0] ? product.image.assets[0].url : ''}\r\n              productId={product.url.value}\r\n              projectId={projectId}\r\n              key={product.system.id}\r\n            />)\r\n          )}\r\n        </div>\r\n      </PageContent>\r\n    );\r\n  }\r\n}\r\n\r\nconst ProductsPageConnected = () => (\r\n  <AppContextConsumer>\r\n    {appContext => (\r\n      <ProductsPage\r\n        init={appContext.loadProducts}\r\n        projectId={appContext.projectId}\r\n        products={appContext.products}\r\n      />\r\n    )}\r\n  </AppContextConsumer>\r\n);\r\n\r\nexport { ProductsPageConnected as ProductsPage };\r\n","import React from 'react';\r\nimport { AppContextConsumer } from '../context/AppContext';\r\nimport { PageContent } from './PageContent';\r\nimport { ArticleExampleContentType } from \"../models/Article\";\r\n\r\ninterface IWelcomePageProps {\r\n  readonly article: ArticleExampleContentType;\r\n  readonly init: () => void;\r\n}\r\n\r\nclass WelcomePage extends React.PureComponent<IWelcomePageProps> {\r\n  componentDidMount(): void {\r\n    this.props.init();\r\n  }\r\n\r\n  render() {\r\n    const { article } = this.props;\r\n    if (article) {\r\n      return (\r\n        <PageContent title={article.title.value}>\r\n          <div dangerouslySetInnerHTML={{ __html: article.body.getHtml() }} />\r\n        </PageContent>\r\n      );\r\n    }\r\n\r\n    return <p>Missing data for Welcome page</p>;\r\n  }\r\n}\r\n\r\nconst WelcomePageConnected = () => (\r\n  <AppContextConsumer>\r\n    {appContext => (\r\n      <WelcomePage\r\n        article={appContext.articles[0]}\r\n        init={appContext.loadWelcomePage} />\r\n    )}\r\n  </AppContextConsumer>\r\n);\r\n\r\nexport { WelcomePageConnected as WelcomePage }\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\nimport { NavigationBar } from './components/NavigationBar';\r\nimport { ProductDetailsPage } from './components/Product/ProductDetailsPage';\r\nimport {\r\n  ProductsPage,\r\n} from './components/Product/ProductsPage';\r\nimport {\r\n  ProductDetailsRoute,\r\n  ProductsRoute,\r\n  ProjectRoute,\r\n} from './constants/routePaths';\r\nimport { WelcomePage } from \"./components/WelcomePage\";\r\n\r\nexport class App extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Route\r\n          path={ProjectRoute}\r\n          component={NavigationBar}\r\n        />\r\n        <div className=\"app__content-wrapper\">\r\n          <Switch>\r\n            <Route\r\n              path={ProjectRoute}\r\n              exact\r\n              component={WelcomePage}\r\n            />\r\n            <Route\r\n              path={ProductDetailsRoute}\r\n              component={ProductDetailsPage}\r\n            />\r\n            <Route\r\n              path={ProductsRoute}\r\n              component={ProductsPage}\r\n            />\r\n            <Route\r\n              render={() => (\r\n                <p>Ooops, missing page!</p>\r\n              )}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import {\r\n  AuthOptions,\r\n  LogoutOptions,\r\n} from 'auth0-js';\r\n\r\nexport const authOptions: AuthOptions = {\r\n  domain: process.env.REACT_APP_AUTH_DOMAIN!,\r\n  clientID: process.env.REACT_APP_AUTH_CLIENT_ID!,\r\n  audience: 'https://app.kenticocloud.com/',\r\n  redirectUri: process.env.REACT_APP_AUTH_REDIRECT_URL,\r\n  responseType: 'token id_token',\r\n  scope: 'openid',\r\n};\r\n\r\nexport const logoutOptions: LogoutOptions = {\r\n  returnTo: process.env.REACT_APP_AUTH_LOGOUT_RETURN_TO,\r\n};\r\n","import auth0 from 'auth0-js';\r\nimport {\r\n  authOptions,\r\n  logoutOptions,\r\n} from './authOptions';\r\nimport { Auth0RedirectUriStorageKey } from \"../constants/localStorageKeys\";\r\nimport { RootRoute, DeployedProjectRootRoute } from \"../constants/routePaths\";\r\n\r\nexport interface IAccessToken {\r\n  readonly accessToken: string;\r\n  readonly expiresAt: number;\r\n}\r\n\r\nexport interface IWebAuth {\r\n  readonly login: () => void;\r\n  readonly logout: () => void;\r\n  readonly silentLogin: () => void;\r\n  readonly handleAuthentication: (onSuccessLogin: (accessToken: IAccessToken, redirectUri: string) => void, onFailedLogin: () => void) => void;\r\n  readonly isAuthenticated: (expiresIn: number) => boolean;\r\n}\r\n\r\nexport class WebAuth implements IWebAuth {\r\n  private webAuth = new auth0.WebAuth(authOptions);\r\n\r\n  login = (): void => {\r\n    this.webAuth.authorize();\r\n  };\r\n\r\n  silentLogin = (): void => {\r\n    localStorage.setItem(Auth0RedirectUriStorageKey, window.location.pathname);\r\n    this.webAuth.authorize({\r\n      prompt: 'none',\r\n    });\r\n  };\r\n\r\n  logout = (): void => {\r\n    this.webAuth.logout(logoutOptions);\r\n  };\r\n\r\n  private getRedirectUri = () => {\r\n    const redirectUriFromStorage = localStorage.getItem(Auth0RedirectUriStorageKey);\r\n    localStorage.removeItem(Auth0RedirectUriStorageKey);\r\n    const redirectUri = redirectUriFromStorage ? redirectUriFromStorage : RootRoute;\r\n\r\n    // todo make nicer\r\n    if (redirectUri.startsWith(DeployedProjectRootRoute)) {\r\n      return redirectUri.slice(DeployedProjectRootRoute.length + 1);\r\n    }\r\n\r\n    return redirectUri;\r\n  };\r\n\r\n  handleAuthentication = (onSuccessLogin: (accessToken: IAccessToken, redirectUri: string) => void, onFailedLogin: () => void): void => {\r\n    this.webAuth.parseHash((err, authResult) => {\r\n      if (authResult && authResult.accessToken && authResult.idToken) {\r\n        const accessToken: IAccessToken = {\r\n          accessToken: authResult.accessToken as string,\r\n          expiresAt: ((authResult.expiresIn || 0) * 1000) + new Date().getTime(),\r\n        };\r\n        const redirectUri = this.getRedirectUri();\r\n        onSuccessLogin(accessToken, redirectUri);\r\n      }\r\n      else if (err) {\r\n        onFailedLogin();\r\n        this.login();\r\n      }\r\n    });\r\n  };\r\n\r\n  isAuthenticated = (expiresAt: number): boolean => {\r\n    // Check whether the current time is past the access token's expiry time\r\n    return new Date().getTime() < expiresAt;\r\n  };\r\n}\r\n","export const Auth0RedirectUriStorageKey = 'redirectUri';\r\n","import React from 'react';\r\n\r\nexport const Loading = (): JSX.Element => {\r\n    return (\r\n      <div>\r\n        <h1>Loading...</h1>\r\n      </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { IAccessToken, WebAuth } from \"../authentication/WebAuth\";\r\nimport { Redirect, Route, RouteComponentProps, Switch, withRouter } from \"react-router\";\r\nimport { Loading } from \"../components/Loading\";\r\nimport { CallbackRoute, RootRoute } from \"../constants/routePaths\";\r\n\r\ninterface IAuthContextState {\r\n  readonly accessToken: string;\r\n  readonly expiresAt: number;\r\n  readonly isLoggedIn: boolean;\r\n}\r\n\r\nexport interface IAuthContext extends IAuthContextState {\r\n  readonly logout: () => void;\r\n}\r\n\r\nconst defaultAuthContext: IAuthContext = {\r\n  accessToken: '',\r\n  expiresAt: 0,\r\n  isLoggedIn: false,\r\n  logout: () => undefined,\r\n};\r\n\r\nconst context = React.createContext<IAuthContext>(defaultAuthContext);\r\nconst AuthContextProvider = context.Provider;\r\nexport const AuthContextConsumer = context.Consumer;\r\n\r\nclass AuthContext extends React.Component<RouteComponentProps, IAuthContextState> {\r\n\r\n  private webAuth = new WebAuth();\r\n\r\n  constructor(props: RouteComponentProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      accessToken: '',\r\n      isLoggedIn: false,\r\n      expiresAt: 0,\r\n    };\r\n  }\r\n\r\n  private isAuthUrlHash = (hash: string): boolean => /access_token|id_token|error/.test(hash);\r\n\r\n  handleAuthCallback = ({ location }: any) => {\r\n    if (this.isAuthUrlHash(location.hash)) {\r\n      this.webAuth.handleAuthentication(this.onSuccessLogin, this.onFailedLogin);\r\n    }\r\n  };\r\n\r\n  onSuccessLogin = (accessToken: IAccessToken, redirectUri: string) => {\r\n    this.setState({\r\n      accessToken: accessToken.accessToken,\r\n      expiresAt: accessToken.expiresAt,\r\n      isLoggedIn: true,\r\n    });\r\n    this.props.history.push(redirectUri);\r\n  };\r\n\r\n  onFailedLogin = () => {\r\n    console.warn('on failed login');\r\n  };\r\n\r\n  componentDidMount() {\r\n    const {silentLogin} = this.webAuth;\r\n    if (!this.isAuthUrlHash(window.location.hash)) {\r\n      silentLogin();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const context: IAuthContext = {\r\n      ...this.state,\r\n      logout: this.webAuth.logout,\r\n    };\r\n\r\n    const { isLoggedIn } = this.state;\r\n\r\n    return (\r\n      <Switch>\r\n        {isLoggedIn ?\r\n          <Redirect\r\n            from={CallbackRoute}\r\n            to={RootRoute}\r\n          /> :\r\n          <Route\r\n            path={CallbackRoute}\r\n            render={props => {\r\n              this.handleAuthCallback(props);\r\n              return <Loading />;\r\n            }}\r\n          />\r\n        }\r\n\r\n        {isLoggedIn && (\r\n          <Route render={() => (\r\n            <AuthContextProvider value={context}>\r\n              {this.props.children}\r\n            </AuthContextProvider>\r\n          )}/>\r\n        )}\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n\r\nconst AuthContextWithRouter = withRouter(AuthContext);\r\nexport { AuthContextWithRouter as AuthContext };\r\n","export type CustomHeaders = {\r\n  [key: string]: string,\r\n};\r\n\r\nexport type RequestType =\r\n  'GET'\r\n  | 'POST'\r\n  | 'PUT'\r\n  | 'DELETE'\r\n  | 'PATCH';\r\n\r\nexport type ProgressCallback = (event: {\r\n  loaded: number;\r\n  total: number;\r\n}) => void;\r\n\r\nexport interface ICreateAjax {\r\n  request: (type: RequestType, url: string, data: any, customHeaders?: CustomHeaders) => Promise<XMLHttpRequest>;\r\n  requestFile: (type: RequestType, url: string, data: any, customHeaders?: CustomHeaders) => Promise<XMLHttpRequest>;\r\n  upload: (url: string, formData: FormData, uploadProgressCallback: ProgressCallback, customHeaders?: CustomHeaders) => Promise<XMLHttpRequest>;\r\n}\r\n\r\nfunction createAjax(withCredentials: any): ICreateAjax {\r\n  return {\r\n    /**\r\n     * Attempts to parse the response as JSON otherwise returns it untouched.\r\n     *\r\n     * @param {string} type The HTTP verb to be used.\r\n     * @param {string} url The url for the XHR request.\r\n     * @param {object} data Optional. The data to be passed with a POST or PUT request.\r\n     * @param {object} customHeaders Optional. Custom headers to be included in a request.\r\n     *\r\n     * @memberof ajax\r\n     */\r\n    request(type: RequestType, url: string, data: any, customHeaders?: CustomHeaders): Promise<XMLHttpRequest> {\r\n      return new Promise<XMLHttpRequest>(resolve => {\r\n        const request = getNewEmptyRequest();\r\n\r\n        request.open(type, url, true);\r\n        request.withCredentials = withCredentials;\r\n\r\n        addCustomHeaders(request, customHeaders);\r\n\r\n        request.onreadystatechange = () => {\r\n          if (request.readyState === 4) {\r\n            resolve(request);\r\n          }\r\n        };\r\n\r\n        request.send(data);\r\n      });\r\n    },\r\n\r\n    requestFile(type: RequestType, url: string, data: any, customHeaders?: CustomHeaders): Promise<XMLHttpRequest> {\r\n      return new Promise<XMLHttpRequest>(resolve => {\r\n        const request = getNewEmptyRequest();\r\n\r\n        request.open(type, url, true);\r\n        request.responseType = 'blob';\r\n        request.withCredentials = withCredentials;\r\n\r\n        addCustomHeaders(request, customHeaders);\r\n\r\n        request.onreadystatechange = () => {\r\n          if (request.readyState === 4) {\r\n            resolve(request);\r\n          }\r\n        };\r\n\r\n        request.send(data);\r\n      });\r\n    },\r\n\r\n    upload(url: string, formData: FormData, uploadProgressCallback: ProgressCallback, customHeaders?: CustomHeaders): Promise<XMLHttpRequest> {\r\n      return new Promise(resolve => {\r\n        const request = getNewEmptyRequest();\r\n\r\n        request.open('POST', url, true);\r\n\r\n        addCustomHeaders(request, customHeaders);\r\n\r\n        request.onreadystatechange = () => {\r\n          if (request.readyState === 4) {\r\n            resolve(request);\r\n          }\r\n        };\r\n\r\n        request.upload.addEventListener('progress', uploadProgressCallback);\r\n        request.send(formData);\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\nfunction addCustomHeaders(request: XMLHttpRequest, customHeaders?: CustomHeaders) {\r\n  if (customHeaders) {\r\n    Object.keys(customHeaders).forEach((header) => {\r\n      const value = customHeaders[header];\r\n      if (header && value) {\r\n        request.setRequestHeader(header, value);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction getNewEmptyRequest(): XMLHttpRequest {\r\n  // if (XMLHttpRequest) {\r\n  return new XMLHttpRequest();\r\n  // }\r\n  // else {\r\n  //   // Set ajax to correct XHR type. Source: https://gist.github.com/jed/993585\r\n  //   return new XMLHttpRequest();\r\n  //   //return new ActiveXObject('MSXML2.XMLHTTP.3.0');\r\n  // }\r\n}\r\n\r\nexport function createAjaxWithCredentials(): ICreateAjax {\r\n  return createAjax(true);\r\n}\r\n\r\n// export function createAjaxWithoutCredentials(): ICreateAjax {\r\n//   return createAjax(false);\r\n// }\r\n","import { RequestType } from './ajax';\r\n\r\nexport interface IRequestContext {\r\n  readonly appInstanceId?: string;\r\n  readonly authToken?: string;\r\n}\r\n\r\nexport type CustomHeaders = {\r\n  [key: string]: string,\r\n};\r\n\r\n\r\nfunction getAuthHeader(accessToken: string): CustomHeaders {\r\n  return { Authorization: `Bearer ${accessToken}` };\r\n}\r\n\r\nfunction getHeaders(defaultHeaders: CustomHeaders, requestContext?: IRequestContext): CustomHeaders {\r\n  if (!requestContext) {\r\n    return defaultHeaders;\r\n  }\r\n\r\n  const newHeaders = requestContext.authToken ? getAuthHeader(requestContext.authToken) : {};\r\n\r\n  if (requestContext.appInstanceId) {\r\n    newHeaders['X-AppInstanceId'] = requestContext.appInstanceId;\r\n  }\r\n\r\n  return { ...defaultHeaders, ...newHeaders };\r\n}\r\n\r\nexport function createRestProvider(ajax: any) {\r\n  function makeRequest(httpVerb: RequestType, url: string, data: any, requestContext?: IRequestContext): Promise<XMLHttpRequest> {\r\n    const headers = getHeaders(\r\n      { 'Content-type': 'application/json' },\r\n      requestContext,\r\n    );\r\n\r\n    const requestBody = data ? prepareDataForSend(data) : null;\r\n    return ajax.request(httpVerb, url, requestBody, headers);\r\n  }\r\n\r\n  return {\r\n    post(url: string, data: any, requestContext?: IRequestContext): Promise<any> {\r\n      return makeRequest('POST', url, data, requestContext)\r\n        .then(verifyStatusCode([200, 201]))\r\n        .then(parseResponse);\r\n    },\r\n  };\r\n}\r\n\r\nfunction prepareDataForSend(data: any): any {\r\n  if (data && typeof data === 'object') {\r\n    // const dto = toDTO(data);\r\n    // return JSON.stringify(dto);\r\n  }\r\n  else if (typeof data === 'string') {\r\n    return JSON.stringify(data);\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\nfunction verifyStatusCode(validStatusCodes: number[]) {\r\n  return (response: XMLHttpRequest) => {\r\n    if (validStatusCodes.indexOf(response.status) >= 0) {\r\n      return response;\r\n    }\r\n    else {\r\n      throw response;\r\n    }\r\n  };\r\n}\r\n\r\nfunction parseResponse(response: XMLHttpRequest) {\r\n  // it might be empty string which can't be parsed by JSON.parse\r\n  if (!response.responseText) {\r\n    return null;\r\n  }\r\n  return JSON.parse(response.responseText);\r\n}\r\n","import { createAjaxWithCredentials } from '../utils/ajax';\r\nimport {\r\n  createRestProvider,\r\n  IRequestContext,\r\n} from '../utils/restProvider';\r\n\r\nconst restProvider = createRestProvider(createAjaxWithCredentials());\r\n\r\nexport interface IPreviewApiKey {\r\n  readonly api_key: string;\r\n  readonly expiresAt: string;\r\n}\r\n\r\nexport const getPreviewApiKey = (authToken: string, projectId: string): Promise<IPreviewApiKey> => {\r\n  const requestContext: IRequestContext = {\r\n    authToken: authToken,\r\n  };\r\n  const url = `${process.env.REACT_APP_KENTICO_CLOUD_URL}/api/project-management/${projectId}/keys/preview-delivery-api-primary`;\r\n  return restProvider.post(url, null, requestContext);\r\n};\r\n","import { IAppContext } from \"../context/AppContext\";\r\nimport { IAuthContext } from \"../context/AuthContext\";\r\nimport { IPreviewApiKey } from \"../repositories/previewApiKeyRepository\";\r\n\r\ninterface ILoadPreviewApiKeyDeps {\r\n  readonly appContext: IAppContext;\r\n  readonly authContext: IAuthContext;\r\n  readonly getPreviewApiKey: (authToken: string, projectId: string) => Promise<IPreviewApiKey>;\r\n}\r\n\r\nexport const createLoadPreviewApiKey = (props: ILoadPreviewApiKeyDeps): () => Promise<string | null> => {\r\n  const { accessToken } = props.authContext;\r\n  const { projectId } = props.appContext;\r\n  return () => props.getPreviewApiKey(accessToken, projectId)\r\n    .then((response: IPreviewApiKey) => {\r\n      return response.api_key;\r\n    })\r\n    .catch(() => {\r\n      return null;\r\n    })\r\n};\r\n","import { matchPath } from \"react-router\";\r\nimport { DeployedProjectRootRoute, ProjectRoute, ProjectRouteParams } from \"../constants/routePaths\";\r\n\r\nexport const getProjectIdFromUrl = (): string | null => {\r\n  if (window.location) {\r\n    const routeToMatch = DeployedProjectRootRoute + ProjectRoute + \"*\";\r\n    const match = matchPath<ProjectRouteParams>(window.location.pathname, routeToMatch);\r\n    if (match) {\r\n      return match.params.projectId;\r\n    }\r\n  }\r\n\r\n  console.warn('no projectId in url');\r\n  return null;\r\n};\r\n","import React from 'react';\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { AuthContextConsumer, IAuthContext } from \"./AuthContext\";\r\nimport { AppContextConsumer, IAppContext } from \"./AppContext\";\r\nimport { Loading } from \"../components/Loading\";\r\nimport { ErrorPage, ErrorPageType } from \"../components/ErrorPage\";\r\nimport { getPreviewApiKey } from \"../repositories/previewApiKeyRepository\";\r\nimport { LoadingStatus } from \"../enums/LoadingStatus\";\r\nimport { createLoadApplicationData } from \"../factories/createLoadApplicationData\";\r\nimport { createLoadPreviewApiKey } from \"../factories/createLoadPreviewApiKey\";\r\nimport { getProjectIdFromUrl } from \"../utils/projectIdUtil\";\r\n\r\ninterface IAppContextInitializationProps extends RouteComponentProps {\r\n  readonly authContext: IAuthContext;\r\n  readonly appContext: IAppContext;\r\n  readonly loadApplicationData: () => void;\r\n}\r\n\r\nclass AppContextInitialization extends React.PureComponent<IAppContextInitializationProps, {}> {\r\n\r\n  componentDidUpdate(): void {\r\n    this.props.loadApplicationData();\r\n  }\r\n\r\n  render() {\r\n    const { projectIdLoadingStatus, previewApiKeyLoadingStatus, dataLoadingStatus } = this.props.appContext;\r\n    if (projectIdLoadingStatus === LoadingStatus.Failed) {\r\n      return <ErrorPage type={ErrorPageType.MissingProjectId}/>\r\n    }\r\n\r\n    if (previewApiKeyLoadingStatus === LoadingStatus.Failed) {\r\n      return <ErrorPage type={ErrorPageType.UnableToGetPreviewApiKey}/>\r\n    }\r\n\r\n    if (dataLoadingStatus === LoadingStatus.Finished) {\r\n      return this.props.children;\r\n    }\r\n\r\n    return <Loading/>\r\n  }\r\n}\r\n\r\nconst AppContextInitializationConnected = (props: RouteComponentProps) => (\r\n  <AppContextConsumer>\r\n    {appContext => (\r\n      <AuthContextConsumer>\r\n        {authContext => {\r\n          const loadApplicationData = createLoadApplicationData({\r\n            appContext,\r\n            getProjectIdFromUrl,\r\n            loadPreviewApikey: createLoadPreviewApiKey({\r\n              authContext,\r\n              appContext,\r\n              getPreviewApiKey,\r\n            })\r\n          });\r\n\r\n          return (\r\n            <AppContextInitialization\r\n              loadApplicationData={loadApplicationData}\r\n              authContext={authContext}\r\n              appContext={appContext}\r\n              {...props}\r\n          />);\r\n        }}\r\n      </AuthContextConsumer>\r\n    )}\r\n  </AppContextConsumer>\r\n);\r\n\r\nconst AppContextInitializationWithRouter = withRouter<RouteComponentProps>(AppContextInitializationConnected);\r\nexport { AppContextInitializationWithRouter as AppContextInitialization };\r\n","import { IAppContext } from \"../context/AppContext\";\r\nimport { LoadingStatus } from \"../enums/LoadingStatus\";\r\n\r\ninterface ILoadApplicationDataDeps {\r\n  readonly appContext: IAppContext;\r\n  readonly loadPreviewApikey: () => Promise<string | null>;\r\n  readonly getProjectIdFromUrl: () => string | null;\r\n}\r\n\r\nexport const createLoadApplicationData = (deps: ILoadApplicationDataDeps) => async (): Promise<void> => {\r\n  const { appContext, loadPreviewApikey, getProjectIdFromUrl } = deps;\r\n\r\n  if (appContext.dataLoadingStatus === LoadingStatus.Finished) {\r\n    return;\r\n  }\r\n\r\n  if (appContext.projectIdLoadingStatus === LoadingStatus.NotLoaded) {\r\n    const projectIdFromUrl = getProjectIdFromUrl();\r\n    if (projectIdFromUrl) {\r\n      appContext.setProjectId(projectIdFromUrl);\r\n      appContext.setProjectIdLoadingStatus(LoadingStatus.Finished);\r\n    } else {\r\n      appContext.setProjectIdLoadingStatus(LoadingStatus.Failed);\r\n    }\r\n  }\r\n\r\n  if (appContext.projectIdLoadingStatus === LoadingStatus.Finished && appContext.previewApiKeyLoadingStatus === LoadingStatus.NotLoaded) {\r\n    appContext.setPreviewApiKeyLoadingStatus(LoadingStatus.InProgress);\r\n    const previewApiKey = await loadPreviewApikey();\r\n    if (previewApiKey) {\r\n      appContext.setPreviewApiKey(previewApiKey);\r\n      appContext.setPreviewApiKeyLoadingStatus(LoadingStatus.Finished);\r\n    }\r\n    else {\r\n      appContext.setPreviewApiKeyLoadingStatus(LoadingStatus.Failed);\r\n    }\r\n  }\r\n\r\n  const requiredDataLoaded = [\r\n    appContext.previewApiKeyLoadingStatus,\r\n    appContext.projectIdLoadingStatus,\r\n  ].every(status => status === LoadingStatus.Finished);\r\n\r\n  if (requiredDataLoaded) {\r\n    appContext.setLoadingStatus(LoadingStatus.Finished);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './App';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { AppContext } from \"./context/AppContext\";\r\nimport { AuthContext } from \"./context/AuthContext\";\r\nimport { AppContextInitialization } from \"./context/AppContextInitialization\";\r\nimport { DeployedProjectRootRoute } from \"./constants/routePaths\";\r\n\r\nReactDOM.render(\r\n  <Router basename={DeployedProjectRootRoute}>\r\n    <AuthContext>\r\n      <AppContext>\r\n        <AppContextInitialization>\r\n          <App/>\r\n        </AppContextInitialization>\r\n      </AppContext>\r\n    </AuthContext>\r\n  </Router>\r\n  , document.getElementById('root'));\r\n"],"sourceRoot":""}